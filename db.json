{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1489114332589},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1489114332589},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1489114332589},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1489114332589},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1489114332589},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1489114332589},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1489114332589},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1489114332589},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1489114332589},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1489114332589},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1489114332589},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1489114332589},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1489114332589},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1489114332589},{"_id":"source/_posts/PHP实现爬虫爬取豆瓣数据.md","hash":"38bb234744a64f1b8e3e97718463d881a6d460f8","modified":1490175222752},{"_id":"source/_posts/PHP封装HTTP操作类支持POST和GET.md","hash":"ceb387bb729917a1a9c409d7486af360ea209bb3","modified":1490175222760},{"_id":"source/_posts/Python实现简易爬虫.md","hash":"f091e7c6524c7ec3a7f0618b7281e0c020f0bcf5","modified":1490175004348},{"_id":"themes/next/gulpfile.coffee","hash":"031bffc483e417b20e90eceb6cf358e7596d2e69","modified":1489740136604},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1489113217594},{"_id":"source/_posts/使用coding-net解决百度爬虫无法抓取githubpage.md","hash":"1c2288fe2fb19f6c774d9dbe2d8471bcc7945eb6","modified":1489546069061},{"_id":"source/_posts/转载入门教程.md","hash":"92bd3c61c35e34fa7927e61c28a9db5007abf09c","modified":1489988753630},{"_id":"source/_posts/解决hexo引用googleapis导致墙内页面加载慢.md","hash":"39e323d9f3476d4be0d3cfb0a9fb37e327cd9da0","modified":1489139649624},{"_id":"themes/next/.git/COMMIT_EDITMSG","hash":"4e1243bd22c66e76c2ba9eddc1f91394e57f9f83","modified":1489740234596},{"_id":"themes/next/_config.yml","hash":"47b4ce584a171479613b089337c36bb69be791f9","modified":1489741137405},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1489114332569},{"_id":"themes/next/.git/ORIG_HEAD","hash":"5607dafc09b51ca0aebf436010d50f73ae0215b2","modified":1489740241777},{"_id":"themes/next/.git/config","hash":"91b6a53b2a7f929b698734717a38d4ac169f0c1f","modified":1489114332569},{"_id":"source/tags/index.md","hash":"a3490d696d9ecb5a73d5b6427825371346777b82","modified":1489739156686},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1489114318981},{"_id":"themes/next/.git/packed-refs","hash":"547f7c5e2791e36cc09c2444d3a4a65fe5468d12","modified":1489114332565},{"_id":"themes/next/.git/FETCH_HEAD","hash":"3c9f55a63e932624c86c95e2259a14e17195ed84","modified":1489740241753},{"_id":"themes/next/.git/index","hash":"96f6db5da1248751563e9a0a1a493ef8093f8076","modified":1489740234596},{"_id":"themes/next/layout/_layout.swig","hash":"2c0c3547a5b470024326a33ae2779d5ee0252266","modified":1489114332589},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1489114332589},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1489114332589},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1489114332589},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1489114332589},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1489114332589},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1489114332589},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1489114332589},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1489114332589},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1489114332589},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1489114332589},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1489114332589},{"_id":"themes/next/languages/en.yml","hash":"e7def07a709ef55684490b700a06998c67f35f39","modified":1489740136604},{"_id":"themes/next/languages/default.yml","hash":"4cc6aeb1ac09a58330e494c8771773758ab354af","modified":1489740136604},{"_id":"themes/next/languages/fr-FR.yml","hash":"24180322c83587a153cea110e74e96eacc3355ad","modified":1489740136604},{"_id":"themes/next/languages/id.yml","hash":"2835ea80dadf093fcf47edd957680973f1fb6b85","modified":1489740136604},{"_id":"themes/next/languages/de.yml","hash":"450dcd968cdce12cfe14597bbbf6c7777e948caa","modified":1489740217512},{"_id":"themes/next/languages/ja.yml","hash":"1c3a05ab80a6f8be63268b66da6f19da7aa2c638","modified":1489740136604},{"_id":"themes/next/languages/ko.yml","hash":"be150543379150f78329815af427bf152c0e9431","modified":1489740136604},{"_id":"themes/next/languages/pt-BR.yml","hash":"958e49571818a34fdf4af3232a07a024050f8f4e","modified":1489740136604},{"_id":"themes/next/languages/pt.yml","hash":"36c8f60dacbe5d27d84d0e0d6974d7679f928da0","modified":1489740136604},{"_id":"themes/next/languages/ru.yml","hash":"7462c3017dae88e5f80ff308db0b95baf960c83f","modified":1489740136604},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3c0c7dfd0256457ee24df9e9879226c58cb084b5","modified":1489740136604},{"_id":"themes/next/languages/zh-hk.yml","hash":"1c917997413bf566cb79e0975789f3c9c9128ccd","modified":1489740136604},{"_id":"themes/next/languages/zh-tw.yml","hash":"0b2c18aa76570364003c8d1cd429fa158ae89022","modified":1489740136604},{"_id":"source/_posts/C语言实现Trie字典树支持中文.md","hash":"75b5af95a62826830a90ae8a602536f5f0f04b5c","modified":1489979303350},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1489114332609},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1489114332609},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1489114318981},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1489114318981},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1489114318981},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1489114318981},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1489114318981},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1489114318981},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"18be3eb275c1decd3614e139f5a311b75f1b0ab8","modified":1489114318981},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1489114332609},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1489114318981},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1489114318981},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1489114318981},{"_id":"themes/next/.git/logs/HEAD","hash":"ddb7288a8cd62060adb66327c098320c09703d74","modified":1489740234596},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1489114332589},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1489114332589},{"_id":"themes/next/layout/_macro/post.swig","hash":"cf0e192eedaa1a1bbbab9e7a7e6979c4e24cda31","modified":1489740136604},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1489114332589},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"b16fcbf0efd20c018d7545257a8533c497ea7647","modified":1489740136604},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1489114332589},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1489114332589},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1489114332589},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1489114332589},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1489114332589},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1489114332589},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1489114332589},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1489114332589},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1489114332593},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1489114332593},{"_id":"themes/next/scripts/tags/exturl.js","hash":"8d7e60f60779bde050d20fd76f6fdc36fc85e06d","modified":1489740136604},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1489114332593},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1489114332593},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1489114332589},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1489114332593},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1489114332589},{"_id":"themes/next/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1489114332589},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1489114332589},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1489114332589},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1489114332593},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1489114332589},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1489114332589},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1489114332593},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1489114332593},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1489114332593},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1489114332593},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1489114332593},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1489114332593},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1489114332593},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1489114332593},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1489114332593},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489114332593},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489114332593},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1489114332593},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1489114332593},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1489114332593},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332589},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332589},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489114332593},{"_id":"themes/next/.git/objects/20/42b32b65ceda38b1ff082bd6811b144d7de0aa","hash":"90fcb481090097d5fd99a3e2eee329934f834d17","modified":1489740234000},{"_id":"themes/next/.git/objects/03/c1762c6f934defcc3f06d9fec38ca8d96b2923","hash":"f05e3d37bd24485cd302834d599f149cec42b664","modified":1489740119131},{"_id":"themes/next/.git/objects/05/d03dfb412a825de9681afe522e0d2afb5790ca","hash":"430c00376d87e6663c84b16cec6166d9f897d84e","modified":1489740234596},{"_id":"themes/next/.git/objects/20/d22b3187a85838b525d4727ced1bdcd5713d1d","hash":"912ff414f5b8de42fc8cc57c670068e80d14cc41","modified":1489740234596},{"_id":"themes/next/.git/objects/40/6b4124c0394e6a0aa5998816fe81edc595d6cd","hash":"def78270ae477205643d41c1ed61625ea15428c3","modified":1489740131016},{"_id":"themes/next/.git/objects/73/a8b0a8e1e0639f7887c9be467e4ed55678acac","hash":"4928bae13a57672d57de6c2dbd4ec667f4be34b8","modified":1489740131012},{"_id":"themes/next/.git/objects/7d/3cd5eec903ac9718c6fd07ece869dfeeb327f0","hash":"3a6756e17883657efe02e21bee7e29c47fb0f92d","modified":1489740131012},{"_id":"themes/next/.git/objects/89/85e2bd84b2f585e1a7a561e9a0cf0ae6a7c1b7","hash":"aefb8063be7a6967e8c93205409d01ac662cee49","modified":1489740119131},{"_id":"themes/next/.git/objects/8c/45ec00d9b50575af304a023feab0ce6456e89c","hash":"22aafdd6a1735d66693a555f5156ab6f668b5993","modified":1489740131012},{"_id":"themes/next/.git/objects/73/bd75abc56cb8cc8fb06b84748f2c28bef78318","hash":"7685e494492e93756ec6dee6008d0357107491c7","modified":1489740234592},{"_id":"themes/next/.git/objects/d3/13d31af44adf3e6ac9d2b460013820efde0e84","hash":"0e25400ceae830c20030e3a99eb64293f16832cf","modified":1489740136656},{"_id":"themes/next/.git/objects/d9/e0b7ec24cfc3ee766efd82877f819e35450373","hash":"2d28dbe014608ae1d9b6a925c698bf456f3696fd","modified":1489740131012},{"_id":"themes/next/.git/objects/dc/0feab038383dee1dab04a1244472d6c9475080","hash":"7dedc64770abd3988d2457ae1e2c5b74fcd071b4","modified":1489740234000},{"_id":"themes/next/.git/objects/08/312b3528e8952e97d51945a6618a82d3e76bb2","hash":"5e02c29a8a79e5793f575e31e0c75016da27a312","modified":1489740226860},{"_id":"themes/next/.git/objects/3d/28a407f8ee6b1e8a50edce54cb2fccc973342f","hash":"baa78ae0c6e113377d2601268584688c54068800","modified":1489740234592},{"_id":"themes/next/.git/refs/heads/master","hash":"5607dafc09b51ca0aebf436010d50f73ae0215b2","modified":1489740234596},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1489114332589},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1489114332589},{"_id":"themes/next/.git/objects/e5/4ff32e8defffb361a01f1c30f2748dfd18481b","hash":"41ea078428ac1aa7df9cec5bbfc80c1e3eacc50d","modified":1489740136656},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1489114332589},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"61e01a84c7b931b783d9e6328f4e56da3407f0ee","modified":1489136707598},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1489114332589},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1489114332589},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1489114332589},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1489114332589},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1489114332589},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1489114332589},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1489114332589},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1489114332589},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/exturl.swig","hash":"8e20dd2078d7dfdf4a5a6daa142bb94d002300f5","modified":1489740136604},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1489114332589},{"_id":"themes/next/.git/objects/pack/pack-dfd8df8c902f19dff1a63124b743a3685314bd38.pack","hash":"a692df103bb26e2ffbfa08db06c37fa17c5a8c2b","modified":1489740234000},{"_id":"themes/next/.git/objects/pack/pack-dfd8df8c902f19dff1a63124b743a3685314bd38.idx","hash":"abbaeb5cca14b12898774a207a42578c5b162dfe","modified":1489739801497},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1489114332593},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1489114332593},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1489114332593},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1489114332593},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1489114332593},{"_id":"themes/next/source/css/_variables/base.styl","hash":"28a7f84242ca816a6452a0a79669ca963d824607","modified":1489740136628},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1489114332593},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1489114332593},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1489114332593},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1489114332593},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1489114332593},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1489114332593},{"_id":"themes/next/source/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1489114332593},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1489114332593},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1489114332593},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1489114332593},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1489114332597},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1489114332597},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1489114332597},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1489114332597},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1489114332601},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1489114332597},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1489114332597},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1489114332601},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1489114332605},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1489114332605},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1489114332605},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1489114332605},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1489114332605},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1489114332605},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1489114332605},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1489114332609},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1489114332589},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1489114332589},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1489114332593},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1489114332593},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1489114332593},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1489114332593},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1489114332593},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1489114332593},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1489114332593},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1489114332565},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1489114332593},{"_id":"themes/next/.git/refs/remotes/origin/master","hash":"533ae954cefa2c28a5098c31d0004dfe28d1b399","modified":1489739801505},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1489114332593},{"_id":"themes/next/.git/refs/remotes/origin/testing","hash":"15660a56eaab85fc3fd3324de8d61dbc2b09b42a","modified":1489739801505},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"1eb34b9c1f6d541605ff23333eeb133e1c4daf17","modified":1489740136628},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1489114332593},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1489114332597},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"ddb7288a8cd62060adb66327c098320c09703d74","modified":1489740234596},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1489114332597},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1489114332593},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1489114332597},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1489114332601},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1489114332601},{"_id":"themes/next/.git/objects/pack/pack-a95573b69ce446566225c894464cba61f7e57293.idx","hash":"3903b3385c6affbb99188c8f10c2f0794fcd7a05","modified":1489114332357},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1489114332605},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1489114332605},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1489114332605},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1489114332605},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"3a1c67c7cad9ddaa33a44564da54b1aafeb81d15","modified":1489114332569},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1489114332593},{"_id":"themes/next/.git/logs/refs/remotes/origin/master","hash":"b37d01cea64f55c9603ca69c5ced8ff3ede17dfa","modified":1489739801505},{"_id":"themes/next/.git/logs/refs/remotes/origin/testing","hash":"2b2bcacdbe30ae6fc8aefa0437baf5c08836ed69","modified":1489739801505},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"f54367c0feda6986c030cc4d15a0ca6ceea14bcb","modified":1489740136604},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"8c0276883398651336853d5ec0e9da267a00dd86","modified":1489740136604},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"dd310c2d999185e881db007360176ee2f811df10","modified":1489740136604},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1489114332593},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1489114332593},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1489114332601},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1489114332601},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1489114332593},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1489114332593},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1489114332597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1489114332605},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1489114332605},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1489114332597},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1489114332597},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1489114332597},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1489114332605},{"_id":"themes/next/.git/objects/pack/pack-a95573b69ce446566225c894464cba61f7e57293.pack","hash":"3e3ac201472e4a0454af57a6dddf7ee59436b224","modified":1489740234000},{"_id":"public/tags/index.html","hash":"ceb01dd11ac70b343cd3c30c842cba5b19dcd30d","modified":1490175229402},{"_id":"public/2017/03/20/转载入门教程/index.html","hash":"47c980eaa2ea73b0655dcc548df675f9de0bd5b4","modified":1490175229404},{"_id":"public/2017/03/10/解决hexo引用googleapis导致墙内页面加载慢/index.html","hash":"91de0021d554b791e0363560bdd7dfceb27619d5","modified":1490175229404},{"_id":"public/archives/index.html","hash":"8643fecef1b00b197cd319a6a5e93345424343c5","modified":1490175229404},{"_id":"public/archives/2017/index.html","hash":"0a3c3e1d04e92f5a2e0fe93323e366076739284d","modified":1490175229404},{"_id":"public/archives/2017/03/index.html","hash":"2b161016c65d6970a0cac337649ae499f015d51c","modified":1490175229404},{"_id":"public/2017/03/20/C语言实现Trie字典树支持中文/index.html","hash":"4d3f30b4877637c6cd152687bfb138fb5db8811e","modified":1490175229404},{"_id":"public/2017/03/15/使用coding-net解决百度爬虫无法抓取githubpage/index.html","hash":"a54d8279ef063a46955b7eae834afb3e72966a83","modified":1490175229404},{"_id":"public/2017/03/10/hello-world/index.html","hash":"4ba08139b5be668715a6733b5bb17533dee1a6c8","modified":1490175229404},{"_id":"public/index.html","hash":"fd680fe344e8c87af1fa7cbbef1b2ad77c161189","modified":1490175229404},{"_id":"public/tags/hexo/index.html","hash":"156b99e9cd15c65e58f4f8f8ccdbb7b3b2a1eebf","modified":1490175229778},{"_id":"public/tags/教程/index.html","hash":"6596b409b16918fca904cc81ecb8d401fddbc71e","modified":1490175229779},{"_id":"public/tags/转载/index.html","hash":"6bd58c1078b1896094576e8ef92606a12e9e21e0","modified":1490175229779},{"_id":"public/tags/算法/index.html","hash":"b4c241f83d27aaaf01d1e45354d58bfaf48ae399","modified":1490175229779},{"_id":"public/tags/C语言/index.html","hash":"27389e29dcd612ccd5811a7602ebb99663dbb77c","modified":1490175229779},{"_id":"public/tags/PHP/index.html","hash":"e8eef11814f695bc34ba47e7b2dbd2e708359087","modified":1490175229786},{"_id":"public/tags/代理IP/index.html","hash":"a707637eb3406f900f63dabac537edea6699f7aa","modified":1490175229786},{"_id":"public/tags/爬虫/index.html","hash":"eb1573277243d889244b237ff941999dd22de9b5","modified":1490175229786},{"_id":"public/tags/HTTP/index.html","hash":"b9dcd5b88c7478ed4f8b7d2825cbf316d86e0eae","modified":1490175229786},{"_id":"public/tags/Python/index.html","hash":"8fa662e6e144158272b6c88f8b6742c4e8fe6fd0","modified":1490175229786},{"_id":"public/2017/03/22/PHP封装HTTP操作类支持POST和GET/index.html","hash":"c0b376d2dc0eb93f2f94542cbdcb7d3bd98e9216","modified":1490175229786},{"_id":"public/2017/03/22/PHP实现爬虫爬取豆瓣数据/index.html","hash":"4aea590acbbb5cb7ba570729f033a65ca55bcbd1","modified":1490175229786},{"_id":"public/2017/03/22/Python实现简易爬虫/index.html","hash":"ed12fc4c96b08bec64d1b248a0003cdc5c1ef1bb","modified":1490175229786},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1490175229786},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1490175229786},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1490175229786},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1490175229786},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1490175229786},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1490175229787},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1490175229787},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1490175229787},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1490175229787},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490175229787},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1490175229787},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1490175229787},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1490175229787},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1490175229787},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1490175229787},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1490175229787},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1490175229787},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1490175229787},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1490175229787},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1490175229787},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1490175229787},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1490175229787},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1490175229787},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1490175229787},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1490175231068},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1490175231071},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1490175231077},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1490175231077},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1490175231077},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1490175231077},{"_id":"public/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1490175231077},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1490175231077},{"_id":"public/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1490175231077},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1490175231077},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1490175231077},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1490175231077},{"_id":"public/css/main.css","hash":"9a7ef89386502fd76aaa4c2d4653411a9a393363","modified":1490175231077},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1490175231077},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1490175231077},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1490175231082},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1490175231083},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1490175231083},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1490175231083},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1490175231083},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1490175231083},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1490175231083},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1490175231083},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1490175231083},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1490175231083},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1490175231083},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1490175231083},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1490175231083},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1490175231083},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1490175231083},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1490175231083},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1490175231084},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1490175231084},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1490175231084},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1490175231084},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1490175231084},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1490175231084},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1490175231084},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1490175231084},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1490175231085},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1490175231085},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1490175231086},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1490175231086},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1490175231086},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1490175231086},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1490175231086},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1490175231086},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1490175231124}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2017-03-17T06:51:23.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-03-17 14:51:23\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-17T08:25:56.686Z","path":"tags/index.html","layout":"page","_id":"cj0kruse3000hk9o5eptmwsop","content":"","excerpt":"","more":""}],"Post":[{"title":"PHP实现爬虫爬取豆瓣数据","date":"2017-03-22T09:18:19.000Z","_content":"PHP实现爬虫爬取豆瓣数据，由于豆瓣有单个IP频次限制，所以使用了代理IP，代理IP的来源于网络公开免费的代理，\n另一篇文章介绍了使用Python爬取代理IP, 代码中的Helper_Http参见另外一篇文章\n``` PHP\n<?php\ninclude_once \"http.php\";\nclass Douban {\n\n    public static function get_list($tag)\n    {\n        $url = 'https://movie.douban.com/j/search_subjects';\n        $page_limit = 500;\n        $page_start = 0;\n        $param = array(\n            'type' => 'tv',\n            'sort'=>'time',\n            'tag'=> $tag,\n            'page_limit'=>500,\n            'page_start'=>0\n        );\n\n        $list = array();\n        do {\n            $result = self::http_get($url . '?' . http_build_query($param));\n            $data = json_decode($result, true);\n            $page_start += $page_limit;\n            $param['page_start'] = $page_start;\n            if (is_array($data['subjects'])) {\n                foreach ($data['subjects'] as $subject) {\n                    $list[] = $subject['id'];\n                }\n            }\n        } while (!empty($data['subjects']));\n\n        return $list;\n    }\n\n    public static function get_info($id)\n    {\n        $url = 'https://api.douban.com/v2/movie/subject/';\n        $result = self::http_get($url . $id);\n        return $result;\n    }\n\n    public static function http_get($url, $try=10)\n    {\n        static $proxy = '';\n        if ($try <= 0) {\n            return '';\n        }\n        $cookie = '';\n        $result = Helper_Http::get($url, array(), $cookie, $proxy);\n        $data = json_decode($result, true);\n        if (isset($data['msg']) && $data['code'] == 112) {\n            $proxy = self::get_proxy();\n            return self::http_get($url, $try-1);\n        }\n        return $result;\n    }\n\n    public static function get_proxy()\n    {\n        //http://www.sslproxies.org/\n        //http://www.xicidaili.com/\n        static $proxys = array(\n            '27.54.185.16:3128',\n            '217.33.216.114:8080',\n            '144.217.248.180:8080',\n            '185.107.80.44:3128',\n            '200.229.202.214:8080',\n            '51.141.32.241:8080',\n            '94.177.243.78:8080',\n            '52.58.9.56:8083',\n            '201.16.140.120:8080',\n            '77.73.66.26:3128',\n            '103.14.8.239:8080',\n            '51.15.46.137:80',\n            '192.34.56.155:80',\n            '54.87.138.13:8083'\n        );\n        static $cur = 0;\n\n        $proxy = $proxys[$cur];\n        $cur = ($cur + 1) % count($proxys);\n        return $proxy;\n    }\n\n\tpublic static function run()\n\t{\n\t\t$tags = array(\n\t\t\t'国产剧',\n\t\t\t'综艺'\n\t\t);\n\n\t\t$ids = array();\n\t\tforeach ($tags as $tag) {\n\t\t\t$list = self::get_list($tag);\n\t\t\t$ids = array_merge($ids, $list);\n\t\t}\n\t\t$ids = array_flip($ids);\n\t\tforeach ($ids as $id=>$val) {\n\t\t\t$info = self::get_info($id);\n\t\t\techo $info . \"\\n\";\n\t\t\tsleep(2);\n\t\t}\n\t}\n\n}\n\nDouban::run();\n```","source":"_posts/PHP实现爬虫爬取豆瓣数据.md","raw":"---\ntitle: PHP实现爬虫爬取豆瓣数据\ndate: 2017-03-22 17:18:19\ntags: [PHP, 爬虫]\n---\nPHP实现爬虫爬取豆瓣数据，由于豆瓣有单个IP频次限制，所以使用了代理IP，代理IP的来源于网络公开免费的代理，\n另一篇文章介绍了使用Python爬取代理IP, 代码中的Helper_Http参见另外一篇文章\n``` PHP\n<?php\ninclude_once \"http.php\";\nclass Douban {\n\n    public static function get_list($tag)\n    {\n        $url = 'https://movie.douban.com/j/search_subjects';\n        $page_limit = 500;\n        $page_start = 0;\n        $param = array(\n            'type' => 'tv',\n            'sort'=>'time',\n            'tag'=> $tag,\n            'page_limit'=>500,\n            'page_start'=>0\n        );\n\n        $list = array();\n        do {\n            $result = self::http_get($url . '?' . http_build_query($param));\n            $data = json_decode($result, true);\n            $page_start += $page_limit;\n            $param['page_start'] = $page_start;\n            if (is_array($data['subjects'])) {\n                foreach ($data['subjects'] as $subject) {\n                    $list[] = $subject['id'];\n                }\n            }\n        } while (!empty($data['subjects']));\n\n        return $list;\n    }\n\n    public static function get_info($id)\n    {\n        $url = 'https://api.douban.com/v2/movie/subject/';\n        $result = self::http_get($url . $id);\n        return $result;\n    }\n\n    public static function http_get($url, $try=10)\n    {\n        static $proxy = '';\n        if ($try <= 0) {\n            return '';\n        }\n        $cookie = '';\n        $result = Helper_Http::get($url, array(), $cookie, $proxy);\n        $data = json_decode($result, true);\n        if (isset($data['msg']) && $data['code'] == 112) {\n            $proxy = self::get_proxy();\n            return self::http_get($url, $try-1);\n        }\n        return $result;\n    }\n\n    public static function get_proxy()\n    {\n        //http://www.sslproxies.org/\n        //http://www.xicidaili.com/\n        static $proxys = array(\n            '27.54.185.16:3128',\n            '217.33.216.114:8080',\n            '144.217.248.180:8080',\n            '185.107.80.44:3128',\n            '200.229.202.214:8080',\n            '51.141.32.241:8080',\n            '94.177.243.78:8080',\n            '52.58.9.56:8083',\n            '201.16.140.120:8080',\n            '77.73.66.26:3128',\n            '103.14.8.239:8080',\n            '51.15.46.137:80',\n            '192.34.56.155:80',\n            '54.87.138.13:8083'\n        );\n        static $cur = 0;\n\n        $proxy = $proxys[$cur];\n        $cur = ($cur + 1) % count($proxys);\n        return $proxy;\n    }\n\n\tpublic static function run()\n\t{\n\t\t$tags = array(\n\t\t\t'国产剧',\n\t\t\t'综艺'\n\t\t);\n\n\t\t$ids = array();\n\t\tforeach ($tags as $tag) {\n\t\t\t$list = self::get_list($tag);\n\t\t\t$ids = array_merge($ids, $list);\n\t\t}\n\t\t$ids = array_flip($ids);\n\t\tforeach ($ids as $id=>$val) {\n\t\t\t$info = self::get_info($id);\n\t\t\techo $info . \"\\n\";\n\t\t\tsleep(2);\n\t\t}\n\t}\n\n}\n\nDouban::run();\n```","slug":"PHP实现爬虫爬取豆瓣数据","published":1,"updated":"2017-03-22T09:33:42.752Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0krusby0000k9o5wokeax5t","content":"<p>PHP实现爬虫爬取豆瓣数据，由于豆瓣有单个IP频次限制，所以使用了代理IP，代理IP的来源于网络公开免费的代理，<br>另一篇文章介绍了使用Python爬取代理IP, 代码中的Helper_Http参见另外一篇文章<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">\"http.php\"</span>;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Douban</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_list</span><span class=\"params\">($tag)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $url = <span class=\"string\">'https://movie.douban.com/j/search_subjects'</span>;</div><div class=\"line\">        $page_limit = <span class=\"number\">500</span>;</div><div class=\"line\">        $page_start = <span class=\"number\">0</span>;</div><div class=\"line\">        $param = <span class=\"keyword\">array</span>(</div><div class=\"line\">            <span class=\"string\">'type'</span> =&gt; <span class=\"string\">'tv'</span>,</div><div class=\"line\">            <span class=\"string\">'sort'</span>=&gt;<span class=\"string\">'time'</span>,</div><div class=\"line\">            <span class=\"string\">'tag'</span>=&gt; $tag,</div><div class=\"line\">            <span class=\"string\">'page_limit'</span>=&gt;<span class=\"number\">500</span>,</div><div class=\"line\">            <span class=\"string\">'page_start'</span>=&gt;<span class=\"number\">0</span></div><div class=\"line\">        );</div><div class=\"line\"></div><div class=\"line\">        $list = <span class=\"keyword\">array</span>();</div><div class=\"line\">        <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">            $result = <span class=\"keyword\">self</span>::http_get($url . <span class=\"string\">'?'</span> . http_build_query($param));</div><div class=\"line\">            $data = json_decode($result, <span class=\"keyword\">true</span>);</div><div class=\"line\">            $page_start += $page_limit;</div><div class=\"line\">            $param[<span class=\"string\">'page_start'</span>] = $page_start;</div><div class=\"line\">            <span class=\"keyword\">if</span> (is_array($data[<span class=\"string\">'subjects'</span>])) &#123;</div><div class=\"line\">                <span class=\"keyword\">foreach</span> ($data[<span class=\"string\">'subjects'</span>] <span class=\"keyword\">as</span> $subject) &#123;</div><div class=\"line\">                    $list[] = $subject[<span class=\"string\">'id'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">while</span> (!<span class=\"keyword\">empty</span>($data[<span class=\"string\">'subjects'</span>]));</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> $list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_info</span><span class=\"params\">($id)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $url = <span class=\"string\">'https://api.douban.com/v2/movie/subject/'</span>;</div><div class=\"line\">        $result = <span class=\"keyword\">self</span>::http_get($url . $id);</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">http_get</span><span class=\"params\">($url, $try=<span class=\"number\">10</span>)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">static</span> $proxy = <span class=\"string\">''</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> ($try &lt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        $cookie = <span class=\"string\">''</span>;</div><div class=\"line\">        $result = Helper_Http::get($url, <span class=\"keyword\">array</span>(), $cookie, $proxy);</div><div class=\"line\">        $data = json_decode($result, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($data[<span class=\"string\">'msg'</span>]) &amp;&amp; $data[<span class=\"string\">'code'</span>] == <span class=\"number\">112</span>) &#123;</div><div class=\"line\">            $proxy = <span class=\"keyword\">self</span>::get_proxy();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::http_get($url, $try<span class=\"number\">-1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_proxy</span><span class=\"params\">()</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"comment\">//http://www.sslproxies.org/</span></div><div class=\"line\">        <span class=\"comment\">//http://www.xicidaili.com/</span></div><div class=\"line\">        <span class=\"keyword\">static</span> $proxys = <span class=\"keyword\">array</span>(</div><div class=\"line\">            <span class=\"string\">'27.54.185.16:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'217.33.216.114:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'144.217.248.180:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'185.107.80.44:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'200.229.202.214:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'51.141.32.241:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'94.177.243.78:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'52.58.9.56:8083'</span>,</div><div class=\"line\">            <span class=\"string\">'201.16.140.120:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'77.73.66.26:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'103.14.8.239:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'51.15.46.137:80'</span>,</div><div class=\"line\">            <span class=\"string\">'192.34.56.155:80'</span>,</div><div class=\"line\">            <span class=\"string\">'54.87.138.13:8083'</span></div><div class=\"line\">        );</div><div class=\"line\">        <span class=\"keyword\">static</span> $cur = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        $proxy = $proxys[$cur];</div><div class=\"line\">        $cur = ($cur + <span class=\"number\">1</span>) % count($proxys);</div><div class=\"line\">        <span class=\"keyword\">return</span> $proxy;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span><span class=\"params\">()</span></span></div><div class=\"line\">\t&#123;</div><div class=\"line\">\t\t$tags = <span class=\"keyword\">array</span>(</div><div class=\"line\">\t\t\t<span class=\"string\">'国产剧'</span>,</div><div class=\"line\">\t\t\t<span class=\"string\">'综艺'</span></div><div class=\"line\">\t\t);</div><div class=\"line\"></div><div class=\"line\">\t\t$ids = <span class=\"keyword\">array</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">foreach</span> ($tags <span class=\"keyword\">as</span> $tag) &#123;</div><div class=\"line\">\t\t\t$list = <span class=\"keyword\">self</span>::get_list($tag);</div><div class=\"line\">\t\t\t$ids = array_merge($ids, $list);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t$ids = array_flip($ids);</div><div class=\"line\">\t\t<span class=\"keyword\">foreach</span> ($ids <span class=\"keyword\">as</span> $id=&gt;$val) &#123;</div><div class=\"line\">\t\t\t$info = <span class=\"keyword\">self</span>::get_info($id);</div><div class=\"line\">\t\t\t<span class=\"keyword\">echo</span> $info . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">\t\t\tsleep(<span class=\"number\">2</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Douban::run();</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>PHP实现爬虫爬取豆瓣数据，由于豆瓣有单个IP频次限制，所以使用了代理IP，代理IP的来源于网络公开免费的代理，<br>另一篇文章介绍了使用Python爬取代理IP, 代码中的Helper_Http参见另外一篇文章<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"keyword\">include_once</span> <span class=\"string\">\"http.php\"</span>;</div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Douban</span> </span>&#123;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_list</span><span class=\"params\">($tag)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $url = <span class=\"string\">'https://movie.douban.com/j/search_subjects'</span>;</div><div class=\"line\">        $page_limit = <span class=\"number\">500</span>;</div><div class=\"line\">        $page_start = <span class=\"number\">0</span>;</div><div class=\"line\">        $param = <span class=\"keyword\">array</span>(</div><div class=\"line\">            <span class=\"string\">'type'</span> =&gt; <span class=\"string\">'tv'</span>,</div><div class=\"line\">            <span class=\"string\">'sort'</span>=&gt;<span class=\"string\">'time'</span>,</div><div class=\"line\">            <span class=\"string\">'tag'</span>=&gt; $tag,</div><div class=\"line\">            <span class=\"string\">'page_limit'</span>=&gt;<span class=\"number\">500</span>,</div><div class=\"line\">            <span class=\"string\">'page_start'</span>=&gt;<span class=\"number\">0</span></div><div class=\"line\">        );</div><div class=\"line\"></div><div class=\"line\">        $list = <span class=\"keyword\">array</span>();</div><div class=\"line\">        <span class=\"keyword\">do</span> &#123;</div><div class=\"line\">            $result = <span class=\"keyword\">self</span>::http_get($url . <span class=\"string\">'?'</span> . http_build_query($param));</div><div class=\"line\">            $data = json_decode($result, <span class=\"keyword\">true</span>);</div><div class=\"line\">            $page_start += $page_limit;</div><div class=\"line\">            $param[<span class=\"string\">'page_start'</span>] = $page_start;</div><div class=\"line\">            <span class=\"keyword\">if</span> (is_array($data[<span class=\"string\">'subjects'</span>])) &#123;</div><div class=\"line\">                <span class=\"keyword\">foreach</span> ($data[<span class=\"string\">'subjects'</span>] <span class=\"keyword\">as</span> $subject) &#123;</div><div class=\"line\">                    $list[] = $subject[<span class=\"string\">'id'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125; <span class=\"keyword\">while</span> (!<span class=\"keyword\">empty</span>($data[<span class=\"string\">'subjects'</span>]));</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> $list;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_info</span><span class=\"params\">($id)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $url = <span class=\"string\">'https://api.douban.com/v2/movie/subject/'</span>;</div><div class=\"line\">        $result = <span class=\"keyword\">self</span>::http_get($url . $id);</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">http_get</span><span class=\"params\">($url, $try=<span class=\"number\">10</span>)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">static</span> $proxy = <span class=\"string\">''</span>;</div><div class=\"line\">        <span class=\"keyword\">if</span> ($try &lt;= <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"string\">''</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">        $cookie = <span class=\"string\">''</span>;</div><div class=\"line\">        $result = Helper_Http::get($url, <span class=\"keyword\">array</span>(), $cookie, $proxy);</div><div class=\"line\">        $data = json_decode($result, <span class=\"keyword\">true</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($data[<span class=\"string\">'msg'</span>]) &amp;&amp; $data[<span class=\"string\">'code'</span>] == <span class=\"number\">112</span>) &#123;</div><div class=\"line\">            $proxy = <span class=\"keyword\">self</span>::get_proxy();</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">self</span>::http_get($url, $try<span class=\"number\">-1</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get_proxy</span><span class=\"params\">()</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">//http://www.sslproxies.org/</span></div><div class=\"line\">        <span class=\"comment\">//http://www.xicidaili.com/</span></div><div class=\"line\">        <span class=\"keyword\">static</span> $proxys = <span class=\"keyword\">array</span>(</div><div class=\"line\">            <span class=\"string\">'27.54.185.16:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'217.33.216.114:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'144.217.248.180:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'185.107.80.44:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'200.229.202.214:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'51.141.32.241:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'94.177.243.78:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'52.58.9.56:8083'</span>,</div><div class=\"line\">            <span class=\"string\">'201.16.140.120:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'77.73.66.26:3128'</span>,</div><div class=\"line\">            <span class=\"string\">'103.14.8.239:8080'</span>,</div><div class=\"line\">            <span class=\"string\">'51.15.46.137:80'</span>,</div><div class=\"line\">            <span class=\"string\">'192.34.56.155:80'</span>,</div><div class=\"line\">            <span class=\"string\">'54.87.138.13:8083'</span></div><div class=\"line\">        );</div><div class=\"line\">        <span class=\"keyword\">static</span> $cur = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">        $proxy = $proxys[$cur];</div><div class=\"line\">        $cur = ($cur + <span class=\"number\">1</span>) % count($proxys);</div><div class=\"line\">        <span class=\"keyword\">return</span> $proxy;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">run</span><span class=\"params\">()</span></div><div class=\"line\">\t</span>&#123;</div><div class=\"line\">\t\t$tags = <span class=\"keyword\">array</span>(</div><div class=\"line\">\t\t\t<span class=\"string\">'国产剧'</span>,</div><div class=\"line\">\t\t\t<span class=\"string\">'综艺'</span></div><div class=\"line\">\t\t);</div><div class=\"line\"></div><div class=\"line\">\t\t$ids = <span class=\"keyword\">array</span>();</div><div class=\"line\">\t\t<span class=\"keyword\">foreach</span> ($tags <span class=\"keyword\">as</span> $tag) &#123;</div><div class=\"line\">\t\t\t$list = <span class=\"keyword\">self</span>::get_list($tag);</div><div class=\"line\">\t\t\t$ids = array_merge($ids, $list);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t\t$ids = array_flip($ids);</div><div class=\"line\">\t\t<span class=\"keyword\">foreach</span> ($ids <span class=\"keyword\">as</span> $id=&gt;$val) &#123;</div><div class=\"line\">\t\t\t$info = <span class=\"keyword\">self</span>::get_info($id);</div><div class=\"line\">\t\t\t<span class=\"keyword\">echo</span> $info . <span class=\"string\">\"\\n\"</span>;</div><div class=\"line\">\t\t\tsleep(<span class=\"number\">2</span>);</div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">Douban::run();</div></pre></td></tr></table></figure></p>\n"},{"title":"PHP封装HTTP操作类支持POST和GET","date":"2017-03-22T09:30:56.000Z","_content":"PHP封装HTTP操作类支持POST和GET\n``` PHP\n<?php\nclass Helper_Http\n{\n    public static function get($url, $header = array(),&$setcookie = '', $proxy = '')\n    {\n        $ch = curl_init();\n        $needheader = empty($setcookie) ? 0 : 1;\n        $opt = array(\n            CURLOPT_URL => $url,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_RETURNTRANSFER => 1,\n            CURLOPT_FOLLOWLOCATION => 0,\n            CURLOPT_HEADER=>$needheader\n        );\n        !empty($proxy) && $opt[CURLOPT_PROXY] = $proxy;\n        //$header=array('Content-type: text/plain', 'Content-length: 100')\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt_array($ch, $opt);\n        $result = curl_exec($ch);\n\n        if ($needheader == 1) {\n            list($header, $body) = explode(\"\\r\\n\\r\\n\", $result, 2);\n            preg_match_all('/Set-Cookie:(.*);/iU', $header, $str);\n            if (!empty($str[1])) {\n                $setcookie = implode('; ', $str[1]) . \";\";\n            }\n            return $body;\n        }\n        return $result;\n    }\n\n    public static function post($url, $data, $header = array(),&$setcookie = '', $proxy = '')\n    {\n        $ch = curl_init();\n        $needheader = empty($setcookie) ? 0 : 1;\n        $opt = array(\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_RETURNTRANSFER => 1,\n            CURLOPT_POST => 1,\n            CURLOPT_POSTFIELDS => $data,\n            CURLOPT_URL => $url,\n            CURLOPT_FOLLOWLOCATION=>0,\n            CURLOPT_HEADER=>$needheader\n        );\n\n        !empty($proxy) && $opt[CURLOPT_PROXY] = $proxy;\n        //$header=array('Content-type: text/plain', 'Content-length: 100')\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt_array($ch, $opt);\n        $result = curl_exec($ch);\n\n        if ($needheader == 1) {\n            list($header, $body) = explode(\"\\r\\n\\r\\n\", $result, 2);\n            preg_match_all('/Set-Cookie: (.*;)/iU', $header, $str);\n            if (!empty($str[1])) {\n                $setcookie = implode('; ', $str[1]) . \";\";\n            }\n            return $body;\n        }\n\n        return $result;\n    }\n}\n```\n","source":"_posts/PHP封装HTTP操作类支持POST和GET.md","raw":"---\ntitle: PHP封装HTTP操作类支持POST和GET\ndate: 2017-03-22 17:30:56\ntags: [PHP, HTTP]\n---\nPHP封装HTTP操作类支持POST和GET\n``` PHP\n<?php\nclass Helper_Http\n{\n    public static function get($url, $header = array(),&$setcookie = '', $proxy = '')\n    {\n        $ch = curl_init();\n        $needheader = empty($setcookie) ? 0 : 1;\n        $opt = array(\n            CURLOPT_URL => $url,\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_RETURNTRANSFER => 1,\n            CURLOPT_FOLLOWLOCATION => 0,\n            CURLOPT_HEADER=>$needheader\n        );\n        !empty($proxy) && $opt[CURLOPT_PROXY] = $proxy;\n        //$header=array('Content-type: text/plain', 'Content-length: 100')\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt_array($ch, $opt);\n        $result = curl_exec($ch);\n\n        if ($needheader == 1) {\n            list($header, $body) = explode(\"\\r\\n\\r\\n\", $result, 2);\n            preg_match_all('/Set-Cookie:(.*);/iU', $header, $str);\n            if (!empty($str[1])) {\n                $setcookie = implode('; ', $str[1]) . \";\";\n            }\n            return $body;\n        }\n        return $result;\n    }\n\n    public static function post($url, $data, $header = array(),&$setcookie = '', $proxy = '')\n    {\n        $ch = curl_init();\n        $needheader = empty($setcookie) ? 0 : 1;\n        $opt = array(\n            CURLOPT_SSL_VERIFYPEER => false,\n            CURLOPT_SSL_VERIFYHOST => false,\n            CURLOPT_RETURNTRANSFER => 1,\n            CURLOPT_POST => 1,\n            CURLOPT_POSTFIELDS => $data,\n            CURLOPT_URL => $url,\n            CURLOPT_FOLLOWLOCATION=>0,\n            CURLOPT_HEADER=>$needheader\n        );\n\n        !empty($proxy) && $opt[CURLOPT_PROXY] = $proxy;\n        //$header=array('Content-type: text/plain', 'Content-length: 100')\n        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);\n        curl_setopt_array($ch, $opt);\n        $result = curl_exec($ch);\n\n        if ($needheader == 1) {\n            list($header, $body) = explode(\"\\r\\n\\r\\n\", $result, 2);\n            preg_match_all('/Set-Cookie: (.*;)/iU', $header, $str);\n            if (!empty($str[1])) {\n                $setcookie = implode('; ', $str[1]) . \";\";\n            }\n            return $body;\n        }\n\n        return $result;\n    }\n}\n```\n","slug":"PHP封装HTTP操作类支持POST和GET","published":1,"updated":"2017-03-22T09:33:42.760Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0krusca0005k9o5ir77cdif","content":"<p>PHP封装HTTP操作类支持POST和GET<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Helper_Http</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($url, $header = array<span class=\"params\">()</span>,&amp;$setcookie = <span class=\"string\">''</span>, $proxy = <span class=\"string\">''</span>)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $ch = curl_init();</div><div class=\"line\">        $needheader = <span class=\"keyword\">empty</span>($setcookie) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</div><div class=\"line\">        $opt = <span class=\"keyword\">array</span>(</div><div class=\"line\">            CURLOPT_URL =&gt; $url,</div><div class=\"line\">            CURLOPT_SSL_VERIFYPEER =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_SSL_VERIFYHOST =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_RETURNTRANSFER =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_FOLLOWLOCATION =&gt; <span class=\"number\">0</span>,</div><div class=\"line\">            CURLOPT_HEADER=&gt;$needheader</div><div class=\"line\">        );</div><div class=\"line\">        !<span class=\"keyword\">empty</span>($proxy) &amp;&amp; $opt[CURLOPT_PROXY] = $proxy;</div><div class=\"line\">        <span class=\"comment\">//$header=array('Content-type: text/plain', 'Content-length: 100')</span></div><div class=\"line\">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</div><div class=\"line\">        curl_setopt_array($ch, $opt);</div><div class=\"line\">        $result = curl_exec($ch);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ($needheader == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">list</span>($header, $body) = explode(<span class=\"string\">\"\\r\\n\\r\\n\"</span>, $result, <span class=\"number\">2</span>);</div><div class=\"line\">            preg_match_all(<span class=\"string\">'/Set-Cookie:(.*);/iU'</span>, $header, $str);</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($str[<span class=\"number\">1</span>])) &#123;</div><div class=\"line\">                $setcookie = implode(<span class=\"string\">'; '</span>, $str[<span class=\"number\">1</span>]) . <span class=\"string\">\";\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> $body;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span><span class=\"params\">($url, $data, $header = array<span class=\"params\">()</span>,&amp;$setcookie = <span class=\"string\">''</span>, $proxy = <span class=\"string\">''</span>)</span></span></div><div class=\"line\">    &#123;</div><div class=\"line\">        $ch = curl_init();</div><div class=\"line\">        $needheader = <span class=\"keyword\">empty</span>($setcookie) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</div><div class=\"line\">        $opt = <span class=\"keyword\">array</span>(</div><div class=\"line\">            CURLOPT_SSL_VERIFYPEER =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_SSL_VERIFYHOST =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_RETURNTRANSFER =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_POST =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_POSTFIELDS =&gt; $data,</div><div class=\"line\">            CURLOPT_URL =&gt; $url,</div><div class=\"line\">            CURLOPT_FOLLOWLOCATION=&gt;<span class=\"number\">0</span>,</div><div class=\"line\">            CURLOPT_HEADER=&gt;$needheader</div><div class=\"line\">        );</div><div class=\"line\"></div><div class=\"line\">        !<span class=\"keyword\">empty</span>($proxy) &amp;&amp; $opt[CURLOPT_PROXY] = $proxy;</div><div class=\"line\">        <span class=\"comment\">//$header=array('Content-type: text/plain', 'Content-length: 100')</span></div><div class=\"line\">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</div><div class=\"line\">        curl_setopt_array($ch, $opt);</div><div class=\"line\">        $result = curl_exec($ch);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ($needheader == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">list</span>($header, $body) = explode(<span class=\"string\">\"\\r\\n\\r\\n\"</span>, $result, <span class=\"number\">2</span>);</div><div class=\"line\">            preg_match_all(<span class=\"string\">'/Set-Cookie: (.*;)/iU'</span>, $header, $str);</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($str[<span class=\"number\">1</span>])) &#123;</div><div class=\"line\">                $setcookie = implode(<span class=\"string\">'; '</span>, $str[<span class=\"number\">1</span>]) . <span class=\"string\">\";\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> $body;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>PHP封装HTTP操作类支持POST和GET<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Helper_Http</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($url, $header = array<span class=\"params\">()</span>,&amp;$setcookie = <span class=\"string\">''</span>, $proxy = <span class=\"string\">''</span>)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $ch = curl_init();</div><div class=\"line\">        $needheader = <span class=\"keyword\">empty</span>($setcookie) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</div><div class=\"line\">        $opt = <span class=\"keyword\">array</span>(</div><div class=\"line\">            CURLOPT_URL =&gt; $url,</div><div class=\"line\">            CURLOPT_SSL_VERIFYPEER =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_SSL_VERIFYHOST =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_RETURNTRANSFER =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_FOLLOWLOCATION =&gt; <span class=\"number\">0</span>,</div><div class=\"line\">            CURLOPT_HEADER=&gt;$needheader</div><div class=\"line\">        );</div><div class=\"line\">        !<span class=\"keyword\">empty</span>($proxy) &amp;&amp; $opt[CURLOPT_PROXY] = $proxy;</div><div class=\"line\">        <span class=\"comment\">//$header=array('Content-type: text/plain', 'Content-length: 100')</span></div><div class=\"line\">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</div><div class=\"line\">        curl_setopt_array($ch, $opt);</div><div class=\"line\">        $result = curl_exec($ch);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ($needheader == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">list</span>($header, $body) = explode(<span class=\"string\">\"\\r\\n\\r\\n\"</span>, $result, <span class=\"number\">2</span>);</div><div class=\"line\">            preg_match_all(<span class=\"string\">'/Set-Cookie:(.*);/iU'</span>, $header, $str);</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($str[<span class=\"number\">1</span>])) &#123;</div><div class=\"line\">                $setcookie = implode(<span class=\"string\">'; '</span>, $str[<span class=\"number\">1</span>]) . <span class=\"string\">\";\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> $body;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">post</span><span class=\"params\">($url, $data, $header = array<span class=\"params\">()</span>,&amp;$setcookie = <span class=\"string\">''</span>, $proxy = <span class=\"string\">''</span>)</span></div><div class=\"line\">    </span>&#123;</div><div class=\"line\">        $ch = curl_init();</div><div class=\"line\">        $needheader = <span class=\"keyword\">empty</span>($setcookie) ? <span class=\"number\">0</span> : <span class=\"number\">1</span>;</div><div class=\"line\">        $opt = <span class=\"keyword\">array</span>(</div><div class=\"line\">            CURLOPT_SSL_VERIFYPEER =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_SSL_VERIFYHOST =&gt; <span class=\"keyword\">false</span>,</div><div class=\"line\">            CURLOPT_RETURNTRANSFER =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_POST =&gt; <span class=\"number\">1</span>,</div><div class=\"line\">            CURLOPT_POSTFIELDS =&gt; $data,</div><div class=\"line\">            CURLOPT_URL =&gt; $url,</div><div class=\"line\">            CURLOPT_FOLLOWLOCATION=&gt;<span class=\"number\">0</span>,</div><div class=\"line\">            CURLOPT_HEADER=&gt;$needheader</div><div class=\"line\">        );</div><div class=\"line\"></div><div class=\"line\">        !<span class=\"keyword\">empty</span>($proxy) &amp;&amp; $opt[CURLOPT_PROXY] = $proxy;</div><div class=\"line\">        <span class=\"comment\">//$header=array('Content-type: text/plain', 'Content-length: 100')</span></div><div class=\"line\">        curl_setopt($ch, CURLOPT_HTTPHEADER, $header);</div><div class=\"line\">        curl_setopt_array($ch, $opt);</div><div class=\"line\">        $result = curl_exec($ch);</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> ($needheader == <span class=\"number\">1</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">list</span>($header, $body) = explode(<span class=\"string\">\"\\r\\n\\r\\n\"</span>, $result, <span class=\"number\">2</span>);</div><div class=\"line\">            preg_match_all(<span class=\"string\">'/Set-Cookie: (.*;)/iU'</span>, $header, $str);</div><div class=\"line\">            <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($str[<span class=\"number\">1</span>])) &#123;</div><div class=\"line\">                $setcookie = implode(<span class=\"string\">'; '</span>, $str[<span class=\"number\">1</span>]) . <span class=\"string\">\";\"</span>;</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">return</span> $body;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> $result;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"},{"title":"Python实现简易爬虫","date":"2017-03-22T09:17:45.000Z","_content":"使用Python爬取代理IP， 爬取的代理IP来源网站一个是国内的一个是国外的，注意爬取国外的需要翻墙，\n如无法翻墙可选择注释爬取国外的相关代码, 使用了两个第三方库requests和BeautifulSoup4，\n简单说明一下，requests库可以更方便操作HTTP请求,\nBeautifulSoup4库用来解析HTML，类似于JavaScript操作DOM一样方便，免去正则匹配的繁琐\n``` Python\n#!/usr/bin/python\n#coding=utf-8\n\nimport json\nimport requests\nfrom bs4 import BeautifulSoup\n\nclass Spider:\n    def get_ips(self, url, table_id):\n        headers = {'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.90 Safari/537.36'}\n        html = requests.get(url, headers=headers)\n        soup = BeautifulSoup(html.text, 'html.parser')\n        table = soup.find(id=table_id)\n        if not table:\n            return []\n        tbody = table.find('tbody')\n        if not tbody:\n            tbody = table\n        ips = []\n        for tr in tbody.find_all('tr'):\n            ip = []\n            for td in tr.find_all('td'):\n                ip.append(td.text)\n            if len(ip):\n                ips.append(ip)\n        return ips\n\n    def get_sslproxies(self):\n        url = 'http://www.sslproxies.org/'\n        table_id = \"proxylisttable\"\n        return self.get_ips(url, table_id)\n\n    def get_xicidaili(self):\n        url = 'http://www.xicidaili.com/wn/'\n        table_id = \"ip_list\"\n        return self.get_ips(url, table_id)\n\n    def write_file(self, str):\n        fp = open('ips.txt', 'w+')\n        fp.write(str)\n        fp.close()\n\n    def run(self):\n        sslproxies = self.get_sslproxies()\n        xicidaili = self.get_xicidaili()\n        ips = {}\n        ips['sslproxies'] = sslproxies\n        ips['xicidaili'] = xicidaili\n        ips = json.dumps(ips)\n        self.write_file(ips)\n\nspider = Spider()\nspider.run()\n```\n\n\n","source":"_posts/Python实现简易爬虫.md","raw":"---\ntitle: Python实现简易爬虫\ndate: 2017-03-22 17:17:45\ntags: [Python, 爬虫, 代理IP]\n---\n使用Python爬取代理IP， 爬取的代理IP来源网站一个是国内的一个是国外的，注意爬取国外的需要翻墙，\n如无法翻墙可选择注释爬取国外的相关代码, 使用了两个第三方库requests和BeautifulSoup4，\n简单说明一下，requests库可以更方便操作HTTP请求,\nBeautifulSoup4库用来解析HTML，类似于JavaScript操作DOM一样方便，免去正则匹配的繁琐\n``` Python\n#!/usr/bin/python\n#coding=utf-8\n\nimport json\nimport requests\nfrom bs4 import BeautifulSoup\n\nclass Spider:\n    def get_ips(self, url, table_id):\n        headers = {'user-agent': 'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.90 Safari/537.36'}\n        html = requests.get(url, headers=headers)\n        soup = BeautifulSoup(html.text, 'html.parser')\n        table = soup.find(id=table_id)\n        if not table:\n            return []\n        tbody = table.find('tbody')\n        if not tbody:\n            tbody = table\n        ips = []\n        for tr in tbody.find_all('tr'):\n            ip = []\n            for td in tr.find_all('td'):\n                ip.append(td.text)\n            if len(ip):\n                ips.append(ip)\n        return ips\n\n    def get_sslproxies(self):\n        url = 'http://www.sslproxies.org/'\n        table_id = \"proxylisttable\"\n        return self.get_ips(url, table_id)\n\n    def get_xicidaili(self):\n        url = 'http://www.xicidaili.com/wn/'\n        table_id = \"ip_list\"\n        return self.get_ips(url, table_id)\n\n    def write_file(self, str):\n        fp = open('ips.txt', 'w+')\n        fp.write(str)\n        fp.close()\n\n    def run(self):\n        sslproxies = self.get_sslproxies()\n        xicidaili = self.get_xicidaili()\n        ips = {}\n        ips['sslproxies'] = sslproxies\n        ips['xicidaili'] = xicidaili\n        ips = json.dumps(ips)\n        self.write_file(ips)\n\nspider = Spider()\nspider.run()\n```\n\n\n","slug":"Python实现简易爬虫","published":1,"updated":"2017-03-22T09:30:04.348Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0kruscb0006k9o5yercmtgo","content":"<p>使用Python爬取代理IP， 爬取的代理IP来源网站一个是国内的一个是国外的，注意爬取国外的需要翻墙，<br>如无法翻墙可选择注释爬取国外的相关代码, 使用了两个第三方库requests和BeautifulSoup4，<br>简单说明一下，requests库可以更方便操作HTTP请求,<br>BeautifulSoup4库用来解析HTML，类似于JavaScript操作DOM一样方便，免去正则匹配的繁琐<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"comment\">#coding=utf-8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spider</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ips</span><span class=\"params\">(self, url, table_id)</span>:</span></div><div class=\"line\">        headers = &#123;<span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.90 Safari/537.36'</span>&#125;</div><div class=\"line\">        html = requests.get(url, headers=headers)</div><div class=\"line\">        soup = BeautifulSoup(html.text, <span class=\"string\">'html.parser'</span>)</div><div class=\"line\">        table = soup.find(id=table_id)</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> table:</div><div class=\"line\">            <span class=\"keyword\">return</span> []</div><div class=\"line\">        tbody = table.find(<span class=\"string\">'tbody'</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> tbody:</div><div class=\"line\">            tbody = table</div><div class=\"line\">        ips = []</div><div class=\"line\">        <span class=\"keyword\">for</span> tr <span class=\"keyword\">in</span> tbody.find_all(<span class=\"string\">'tr'</span>):</div><div class=\"line\">            ip = []</div><div class=\"line\">            <span class=\"keyword\">for</span> td <span class=\"keyword\">in</span> tr.find_all(<span class=\"string\">'td'</span>):</div><div class=\"line\">                ip.append(td.text)</div><div class=\"line\">            <span class=\"keyword\">if</span> len(ip):</div><div class=\"line\">                ips.append(ip)</div><div class=\"line\">        <span class=\"keyword\">return</span> ips</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_sslproxies</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        url = <span class=\"string\">'http://www.sslproxies.org/'</span></div><div class=\"line\">        table_id = <span class=\"string\">\"proxylisttable\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.get_ips(url, table_id)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_xicidaili</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        url = <span class=\"string\">'http://www.xicidaili.com/wn/'</span></div><div class=\"line\">        table_id = <span class=\"string\">\"ip_list\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.get_ips(url, table_id)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write_file</span><span class=\"params\">(self, str)</span>:</span></div><div class=\"line\">        fp = open(<span class=\"string\">'ips.txt'</span>, <span class=\"string\">'w+'</span>)</div><div class=\"line\">        fp.write(str)</div><div class=\"line\">        fp.close()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        sslproxies = self.get_sslproxies()</div><div class=\"line\">        xicidaili = self.get_xicidaili()</div><div class=\"line\">        ips = &#123;&#125;</div><div class=\"line\">        ips[<span class=\"string\">'sslproxies'</span>] = sslproxies</div><div class=\"line\">        ips[<span class=\"string\">'xicidaili'</span>] = xicidaili</div><div class=\"line\">        ips = json.dumps(ips)</div><div class=\"line\">        self.write_file(ips)</div><div class=\"line\"></div><div class=\"line\">spider = Spider()</div><div class=\"line\">spider.run()</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>使用Python爬取代理IP， 爬取的代理IP来源网站一个是国内的一个是国外的，注意爬取国外的需要翻墙，<br>如无法翻墙可选择注释爬取国外的相关代码, 使用了两个第三方库requests和BeautifulSoup4，<br>简单说明一下，requests库可以更方便操作HTTP请求,<br>BeautifulSoup4库用来解析HTML，类似于JavaScript操作DOM一样方便，免去正则匹配的繁琐<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></div><div class=\"line\"><span class=\"comment\">#coding=utf-8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> json</div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">from</span> bs4 <span class=\"keyword\">import</span> BeautifulSoup</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Spider</span>:</span></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_ips</span><span class=\"params\">(self, url, table_id)</span>:</span></div><div class=\"line\">        headers = &#123;<span class=\"string\">'user-agent'</span>: <span class=\"string\">'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.90 Safari/537.36'</span>&#125;</div><div class=\"line\">        html = requests.get(url, headers=headers)</div><div class=\"line\">        soup = BeautifulSoup(html.text, <span class=\"string\">'html.parser'</span>)</div><div class=\"line\">        table = soup.find(id=table_id)</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> table:</div><div class=\"line\">            <span class=\"keyword\">return</span> []</div><div class=\"line\">        tbody = table.find(<span class=\"string\">'tbody'</span>)</div><div class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> tbody:</div><div class=\"line\">            tbody = table</div><div class=\"line\">        ips = []</div><div class=\"line\">        <span class=\"keyword\">for</span> tr <span class=\"keyword\">in</span> tbody.find_all(<span class=\"string\">'tr'</span>):</div><div class=\"line\">            ip = []</div><div class=\"line\">            <span class=\"keyword\">for</span> td <span class=\"keyword\">in</span> tr.find_all(<span class=\"string\">'td'</span>):</div><div class=\"line\">                ip.append(td.text)</div><div class=\"line\">            <span class=\"keyword\">if</span> len(ip):</div><div class=\"line\">                ips.append(ip)</div><div class=\"line\">        <span class=\"keyword\">return</span> ips</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_sslproxies</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        url = <span class=\"string\">'http://www.sslproxies.org/'</span></div><div class=\"line\">        table_id = <span class=\"string\">\"proxylisttable\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.get_ips(url, table_id)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_xicidaili</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        url = <span class=\"string\">'http://www.xicidaili.com/wn/'</span></div><div class=\"line\">        table_id = <span class=\"string\">\"ip_list\"</span></div><div class=\"line\">        <span class=\"keyword\">return</span> self.get_ips(url, table_id)</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">write_file</span><span class=\"params\">(self, str)</span>:</span></div><div class=\"line\">        fp = open(<span class=\"string\">'ips.txt'</span>, <span class=\"string\">'w+'</span>)</div><div class=\"line\">        fp.write(str)</div><div class=\"line\">        fp.close()</div><div class=\"line\"></div><div class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">run</span><span class=\"params\">(self)</span>:</span></div><div class=\"line\">        sslproxies = self.get_sslproxies()</div><div class=\"line\">        xicidaili = self.get_xicidaili()</div><div class=\"line\">        ips = &#123;&#125;</div><div class=\"line\">        ips[<span class=\"string\">'sslproxies'</span>] = sslproxies</div><div class=\"line\">        ips[<span class=\"string\">'xicidaili'</span>] = xicidaili</div><div class=\"line\">        ips = json.dumps(ips)</div><div class=\"line\">        self.write_file(ips)</div><div class=\"line\"></div><div class=\"line\">spider = Spider()</div><div class=\"line\">spider.run()</div></pre></td></tr></table></figure></p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2017-03-10T02:33:37.594Z","updated":"2017-03-10T02:33:37.594Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0krusce0008k9o5155mjram","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"使用coding.net解决百度爬虫无法抓取githubpage","date":"2017-03-15T02:20:22.000Z","_content":"假设你已经在github上使用hexo搭建好了一个可以访问的page页，\n我们使用百度的站长平台的抓取诊断功能，诊断如下链接：yourusername.github.io ,\n会提示抓取失败，原因就是github pages屏蔽的百度的爬虫，毕竟自身的安全才是最重要的，具体原因大家都懂得。\ncoding.net是国内的一个类似github的，也支持pages服务，看到这可能也都清楚了，怎么做来解决百度爬虫无法抓取githubpage了，\n简单来说就是，github page和coding.net page绑定到同一个域名A，\n使用域名解析服务DNSPod把域名A根据不同的线路cname到github page或者coding.net page,\n在此我们选择百度线路的cname到coding.net , 其它cname到github page, \n域名可以自己购买或者使用免费的如tk顶级域名,\n最后在hexo的配置文件里修改代码的部署，同时部署到github和coding.net, 如下\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:yourname/yourname.github.io.git,master\n    coding: git@git.coding.net:yourname/yourname.coding.me.git,master\n","source":"_posts/使用coding-net解决百度爬虫无法抓取githubpage.md","raw":"---\ntitle: 使用coding.net解决百度爬虫无法抓取githubpage\ndate: 2017-03-15 10:20:22\ntags: hexo\n---\n假设你已经在github上使用hexo搭建好了一个可以访问的page页，\n我们使用百度的站长平台的抓取诊断功能，诊断如下链接：yourusername.github.io ,\n会提示抓取失败，原因就是github pages屏蔽的百度的爬虫，毕竟自身的安全才是最重要的，具体原因大家都懂得。\ncoding.net是国内的一个类似github的，也支持pages服务，看到这可能也都清楚了，怎么做来解决百度爬虫无法抓取githubpage了，\n简单来说就是，github page和coding.net page绑定到同一个域名A，\n使用域名解析服务DNSPod把域名A根据不同的线路cname到github page或者coding.net page,\n在此我们选择百度线路的cname到coding.net , 其它cname到github page, \n域名可以自己购买或者使用免费的如tk顶级域名,\n最后在hexo的配置文件里修改代码的部署，同时部署到github和coding.net, 如下\ndeploy:\n  type: git\n  repo:\n    github: git@github.com:yourname/yourname.github.io.git,master\n    coding: git@git.coding.net:yourname/yourname.coding.me.git,master\n","slug":"使用coding-net解决百度爬虫无法抓取githubpage","published":1,"updated":"2017-03-15T02:47:49.061Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0kruse1000gk9o52xdq0j0d","content":"<p>假设你已经在github上使用hexo搭建好了一个可以访问的page页，<br>我们使用百度的站长平台的抓取诊断功能，诊断如下链接：yourusername.github.io ,<br>会提示抓取失败，原因就是github pages屏蔽的百度的爬虫，毕竟自身的安全才是最重要的，具体原因大家都懂得。<br>coding.net是国内的一个类似github的，也支持pages服务，看到这可能也都清楚了，怎么做来解决百度爬虫无法抓取githubpage了，<br>简单来说就是，github page和coding.net page绑定到同一个域名A，<br>使用域名解析服务DNSPod把域名A根据不同的线路cname到github page或者coding.net page,<br>在此我们选择百度线路的cname到coding.net , 其它cname到github page,<br>域名可以自己购买或者使用免费的如tk顶级域名,<br>最后在hexo的配置文件里修改代码的部署，同时部署到github和coding.net, 如下<br>deploy:<br>  type: git<br>  repo:<br>    github: git@github.com:yourname/yourname.github.io.git,master<br>    coding: git@git.coding.net:yourname/yourname.coding.me.git,master</p>\n","excerpt":"","more":"<p>假设你已经在github上使用hexo搭建好了一个可以访问的page页，<br>我们使用百度的站长平台的抓取诊断功能，诊断如下链接：yourusername.github.io ,<br>会提示抓取失败，原因就是github pages屏蔽的百度的爬虫，毕竟自身的安全才是最重要的，具体原因大家都懂得。<br>coding.net是国内的一个类似github的，也支持pages服务，看到这可能也都清楚了，怎么做来解决百度爬虫无法抓取githubpage了，<br>简单来说就是，github page和coding.net page绑定到同一个域名A，<br>使用域名解析服务DNSPod把域名A根据不同的线路cname到github page或者coding.net page,<br>在此我们选择百度线路的cname到coding.net , 其它cname到github page,<br>域名可以自己购买或者使用免费的如tk顶级域名,<br>最后在hexo的配置文件里修改代码的部署，同时部署到github和coding.net, 如下<br>deploy:<br>  type: git<br>  repo:<br>    github: git@github.com:yourname/yourname.github.io.git,master<br>    coding: git@git.coding.net:yourname/yourname.coding.me.git,master</p>\n"},{"title":"转载入门教程","date":"2017-03-20T05:43:08.000Z","_content":"[MongoDB入门](http://wiki.jikexueyuan.com/project/the-little-mongodb-book/)\n","source":"_posts/转载入门教程.md","raw":"---\ntitle: 转载入门教程\ndate: 2017-03-20 13:43:08\ntags: [转载,教程]\n---\n[MongoDB入门](http://wiki.jikexueyuan.com/project/the-little-mongodb-book/)\n","slug":"转载入门教程","published":1,"updated":"2017-03-20T05:45:53.630Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0kruse4000ik9o5mwfqu2jk","content":"<p><a href=\"http://wiki.jikexueyuan.com/project/the-little-mongodb-book/\" target=\"_blank\" rel=\"external\">MongoDB入门</a></p>\n","excerpt":"","more":"<p><a href=\"http://wiki.jikexueyuan.com/project/the-little-mongodb-book/\">MongoDB入门</a></p>\n"},{"title":"解决hexo引用googleapis导致墙内页面加载慢","date":"2017-03-10T09:18:09.000Z","_content":"  以next主题为例，我们需要修改一处代码和配置文件，\n在next主题目录下搜索“fonts.googleapis.com”，在_config.yaf下加上我们自己的字体host,\n然后在external-fonts.swig使用这个配置的地方做一些修改，\n最后就是下载fonts.googleapis.com对应的字体文件放到我们可以访问到的地方就可以了。  ","source":"_posts/解决hexo引用googleapis导致墙内页面加载慢.md","raw":"---\ntitle: 解决hexo引用googleapis导致墙内页面加载慢\ndate: 2017-03-10 17:18:09\ntags: hexo\n---\n  以next主题为例，我们需要修改一处代码和配置文件，\n在next主题目录下搜索“fonts.googleapis.com”，在_config.yaf下加上我们自己的字体host,\n然后在external-fonts.swig使用这个配置的地方做一些修改，\n最后就是下载fonts.googleapis.com对应的字体文件放到我们可以访问到的地方就可以了。  ","slug":"解决hexo引用googleapis导致墙内页面加载慢","published":1,"updated":"2017-03-10T09:54:09.624Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0kruseb000kk9o5t4n5rtc1","content":"<p>  以next主题为例，我们需要修改一处代码和配置文件，<br>在next主题目录下搜索“fonts.googleapis.com”，在_config.yaf下加上我们自己的字体host,<br>然后在external-fonts.swig使用这个配置的地方做一些修改，<br>最后就是下载fonts.googleapis.com对应的字体文件放到我们可以访问到的地方就可以了。  </p>\n","excerpt":"","more":"<p>  以next主题为例，我们需要修改一处代码和配置文件，<br>在next主题目录下搜索“fonts.googleapis.com”，在_config.yaf下加上我们自己的字体host,<br>然后在external-fonts.swig使用这个配置的地方做一些修改，<br>最后就是下载fonts.googleapis.com对应的字体文件放到我们可以访问到的地方就可以了。  </p>\n"},{"title":"C语言实现Trie字典树支持中文","date":"2017-03-20T03:00:38.000Z","_content":"C语言实现Trie字典树，支持中文，支持删除节点\n``` C\n#include <stdio.h>\n#include <wchar.h>\n#include <locale.h>\n#include <stdlib.h>\n#include <memory.h>\n\n#define DEFAULT_CHILD_SIZE 4\n#define MAX_KEY_LENGTH 11\n#define MAX_KEYS_LENGTH 100\n\n\ntypedef struct Node {\n    wchar_t ch;\n    _Bool is_end;\n    struct Node **child;\n    int child_cur_length;\n    int child_total_length;\n} Node;\n\ntypedef struct CHS {\n    wchar_t chs[MAX_KEYS_LENGTH][MAX_KEY_LENGTH];\n    int length;\n} CHS;\n\nNode* search_trie_child(Node *node, wchar_t ch)\n{\n    int i = 0;\n    Node *pnode = NULL;\n    Node *ptmp = NULL;\n    for (i = 0; i < node->child_cur_length; i++) {\n        ptmp = node->child[i];\n        if (ptmp->ch == ch) {\n            pnode = ptmp;\n            break;\n        }\n    }\n    return pnode;\n}\n\nNode* init_node(wchar_t ch)\n{\n    Node *pnode = (Node *)malloc(sizeof(Node));\n    pnode->ch = ch;\n    pnode->is_end = 0;\n    pnode->child_cur_length = 0;\n    pnode->child_total_length = DEFAULT_CHILD_SIZE;\n    pnode->child = (Node**)malloc(pnode->child_total_length * sizeof(Node *));\n    return pnode;\n}\n\nvoid free_node(Node *pnode)\n{\n    free(pnode->child);\n    free(pnode);\n}\n\nNode* add_trie_child(Node *node, wchar_t ch)\n{\n    Node *pnode = init_node(ch);\n    if (node->child_cur_length >= node->child_total_length) {\n        node->child_total_length = node->child_total_length * 2;\n        Node **tmp = (Node**)malloc(node->child_total_length * sizeof(Node *));\n        memcpy(tmp, node->child, node->child_cur_length * sizeof(Node *));\n        free(node->child);\n        node->child = tmp;\n    }\n    node->child[node->child_cur_length++] = pnode;\n    return pnode;\n}\n\n_Bool delete_trie_word(Node *trie, wchar_t *str, int cur)\n{\n    Node *pnode;\n\n    if (str[cur] == '\\0' && trie->is_end) {\n        //匹配到了最后一个字符且是結束节点\n        trie->is_end = 0;\n        return 1;\n    }\n\n    if ( str[cur] == '\\0' || ( pnode = search_trie_child(trie, str[cur]) ) == NULL ) {\n        return 0;\n    }\n\n    if (delete_trie_word(pnode, str, cur + 1)) {\n        if (pnode->child_cur_length == 0) {\n            int i;\n            //删除节点指针，并且把最后一个节点指针的位置调整到删除节点指针的位置\n            for (i = 0; i < trie->child_cur_length; i++) {\n                if (pnode == trie->child[i]) {\n                    trie->child[i] = trie->child[trie->child_cur_length - 1];\n                    trie->child[trie->child_cur_length - 1] = 0;\n                    trie->child_cur_length--;\n                    free_node(pnode);\n                    break;\n                }\n            }\n        }\n        if (trie->child_cur_length == 0 && !trie->is_end) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\nint add_trie(Node *trie, wchar_t *str)\n{\n    int len = (int)wcslen(str);\n    int i = 0;\n    Node *pnode = NULL;\n    if (len >= MAX_KEY_LENGTH) {\n        wprintf(L\"too long str: %ls\\n\", str);\n        return 0;\n    }\n\n    for (i = 0; i < len; i++) {\n        if ( (pnode = search_trie_child(trie, str[i])) == NULL ) {\n            pnode = add_trie_child(trie, str[i]);\n        }\n        trie = pnode;\n    }\n    trie->is_end = 1;\n\n    return 0;\n}\n\nvoid delete_trie(Node *trie)\n{\n    int i;\n    for (i = 0; i < trie->child_cur_length; i++) {\n        delete_trie(trie->child[i]);\n    }\n    free_node(trie);\n}\n\nCHS* search_trie(Node *trie, wchar_t *str)\n{\n    int len = (int)wcslen(str);\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    Node *pnode = NULL;\n    Node *ptrie = NULL;\n    CHS *pchs = (CHS *)malloc(sizeof(CHS));\n    pchs->length = 0;\n    memset(pchs, 0, sizeof(CHS));\n\n    for (i = 0; i < len; i++) {\n        ptrie = trie;\n        for (j = i, k = 0; j < len; j++) {\n            if ( (pnode = search_trie_child(ptrie, str[j])) == NULL ) {\n                break;\n            } else {\n                ptrie = pnode;\n                pchs->chs[pchs->length][k++] = str[j];\n            }\n            if (pnode->is_end) {\n                pchs->chs[pchs->length][k] = '\\0';\n                pchs->length++;\n                memcpy(&pchs->chs[pchs->length], pchs->chs[pchs->length-1], MAX_KEY_LENGTH);\n            }\n        }\n    }\n\n    return pchs;\n}\n\nvoid print_trie(CHS *pchs)\n{\n    int i;\n\n    for (i = 0; i < pchs->length; i++) {\n        wprintf(L\"%ls\\n\", &pchs->chs[i]);\n    }\n}\n\nint test()\n{\n    Node *trie = init_node(0);\n\n    wchar_t *str1 = L\"1你好\";\n    add_trie(trie, str1);\n\n    wchar_t *str2 = L\"2你好吗\";\n    add_trie(trie, str2);\n\n    wchar_t *str3 = L\"3你还好\";\n    add_trie(trie, str3);\n\n    wchar_t *str4 = L\"4你还好吗\";\n    add_trie(trie, str4);\n\n    wchar_t *str5 = L\"5你真的还好吗\";\n    add_trie(trie, str5);\n\n    wchar_t *str6 = L\"我好\";\n    add_trie(trie, str6);\n\n    wchar_t *str7 = L\"我好吗\";\n    add_trie(trie, str7);\n\n    wchar_t *str8 = L\"我还好\";\n    add_trie(trie, str8);\n\n    wchar_t *str = L\"cc你好我好你好吗\";\n    CHS *pchs = search_trie(trie, str);\n    delete_trie_word(trie, str8, 0);\n    delete_trie(trie);\n\n    print_trie(pchs);\n    free(pchs);\n\n    return 0;\n}\n\nint main() \n{\n    setlocale(LC_CTYPE, \"\");\n    test();\n    return 0;\n}\n```","source":"_posts/C语言实现Trie字典树支持中文.md","raw":"---\ntitle: C语言实现Trie字典树支持中文\ndate: 2017-03-20 11:00:38\ntags: [C语言,算法]\n---\nC语言实现Trie字典树，支持中文，支持删除节点\n``` C\n#include <stdio.h>\n#include <wchar.h>\n#include <locale.h>\n#include <stdlib.h>\n#include <memory.h>\n\n#define DEFAULT_CHILD_SIZE 4\n#define MAX_KEY_LENGTH 11\n#define MAX_KEYS_LENGTH 100\n\n\ntypedef struct Node {\n    wchar_t ch;\n    _Bool is_end;\n    struct Node **child;\n    int child_cur_length;\n    int child_total_length;\n} Node;\n\ntypedef struct CHS {\n    wchar_t chs[MAX_KEYS_LENGTH][MAX_KEY_LENGTH];\n    int length;\n} CHS;\n\nNode* search_trie_child(Node *node, wchar_t ch)\n{\n    int i = 0;\n    Node *pnode = NULL;\n    Node *ptmp = NULL;\n    for (i = 0; i < node->child_cur_length; i++) {\n        ptmp = node->child[i];\n        if (ptmp->ch == ch) {\n            pnode = ptmp;\n            break;\n        }\n    }\n    return pnode;\n}\n\nNode* init_node(wchar_t ch)\n{\n    Node *pnode = (Node *)malloc(sizeof(Node));\n    pnode->ch = ch;\n    pnode->is_end = 0;\n    pnode->child_cur_length = 0;\n    pnode->child_total_length = DEFAULT_CHILD_SIZE;\n    pnode->child = (Node**)malloc(pnode->child_total_length * sizeof(Node *));\n    return pnode;\n}\n\nvoid free_node(Node *pnode)\n{\n    free(pnode->child);\n    free(pnode);\n}\n\nNode* add_trie_child(Node *node, wchar_t ch)\n{\n    Node *pnode = init_node(ch);\n    if (node->child_cur_length >= node->child_total_length) {\n        node->child_total_length = node->child_total_length * 2;\n        Node **tmp = (Node**)malloc(node->child_total_length * sizeof(Node *));\n        memcpy(tmp, node->child, node->child_cur_length * sizeof(Node *));\n        free(node->child);\n        node->child = tmp;\n    }\n    node->child[node->child_cur_length++] = pnode;\n    return pnode;\n}\n\n_Bool delete_trie_word(Node *trie, wchar_t *str, int cur)\n{\n    Node *pnode;\n\n    if (str[cur] == '\\0' && trie->is_end) {\n        //匹配到了最后一个字符且是結束节点\n        trie->is_end = 0;\n        return 1;\n    }\n\n    if ( str[cur] == '\\0' || ( pnode = search_trie_child(trie, str[cur]) ) == NULL ) {\n        return 0;\n    }\n\n    if (delete_trie_word(pnode, str, cur + 1)) {\n        if (pnode->child_cur_length == 0) {\n            int i;\n            //删除节点指针，并且把最后一个节点指针的位置调整到删除节点指针的位置\n            for (i = 0; i < trie->child_cur_length; i++) {\n                if (pnode == trie->child[i]) {\n                    trie->child[i] = trie->child[trie->child_cur_length - 1];\n                    trie->child[trie->child_cur_length - 1] = 0;\n                    trie->child_cur_length--;\n                    free_node(pnode);\n                    break;\n                }\n            }\n        }\n        if (trie->child_cur_length == 0 && !trie->is_end) {\n            return 1;\n        }\n    }\n\n    return 0;\n}\n\nint add_trie(Node *trie, wchar_t *str)\n{\n    int len = (int)wcslen(str);\n    int i = 0;\n    Node *pnode = NULL;\n    if (len >= MAX_KEY_LENGTH) {\n        wprintf(L\"too long str: %ls\\n\", str);\n        return 0;\n    }\n\n    for (i = 0; i < len; i++) {\n        if ( (pnode = search_trie_child(trie, str[i])) == NULL ) {\n            pnode = add_trie_child(trie, str[i]);\n        }\n        trie = pnode;\n    }\n    trie->is_end = 1;\n\n    return 0;\n}\n\nvoid delete_trie(Node *trie)\n{\n    int i;\n    for (i = 0; i < trie->child_cur_length; i++) {\n        delete_trie(trie->child[i]);\n    }\n    free_node(trie);\n}\n\nCHS* search_trie(Node *trie, wchar_t *str)\n{\n    int len = (int)wcslen(str);\n    int i = 0;\n    int j = 0;\n    int k = 0;\n    Node *pnode = NULL;\n    Node *ptrie = NULL;\n    CHS *pchs = (CHS *)malloc(sizeof(CHS));\n    pchs->length = 0;\n    memset(pchs, 0, sizeof(CHS));\n\n    for (i = 0; i < len; i++) {\n        ptrie = trie;\n        for (j = i, k = 0; j < len; j++) {\n            if ( (pnode = search_trie_child(ptrie, str[j])) == NULL ) {\n                break;\n            } else {\n                ptrie = pnode;\n                pchs->chs[pchs->length][k++] = str[j];\n            }\n            if (pnode->is_end) {\n                pchs->chs[pchs->length][k] = '\\0';\n                pchs->length++;\n                memcpy(&pchs->chs[pchs->length], pchs->chs[pchs->length-1], MAX_KEY_LENGTH);\n            }\n        }\n    }\n\n    return pchs;\n}\n\nvoid print_trie(CHS *pchs)\n{\n    int i;\n\n    for (i = 0; i < pchs->length; i++) {\n        wprintf(L\"%ls\\n\", &pchs->chs[i]);\n    }\n}\n\nint test()\n{\n    Node *trie = init_node(0);\n\n    wchar_t *str1 = L\"1你好\";\n    add_trie(trie, str1);\n\n    wchar_t *str2 = L\"2你好吗\";\n    add_trie(trie, str2);\n\n    wchar_t *str3 = L\"3你还好\";\n    add_trie(trie, str3);\n\n    wchar_t *str4 = L\"4你还好吗\";\n    add_trie(trie, str4);\n\n    wchar_t *str5 = L\"5你真的还好吗\";\n    add_trie(trie, str5);\n\n    wchar_t *str6 = L\"我好\";\n    add_trie(trie, str6);\n\n    wchar_t *str7 = L\"我好吗\";\n    add_trie(trie, str7);\n\n    wchar_t *str8 = L\"我还好\";\n    add_trie(trie, str8);\n\n    wchar_t *str = L\"cc你好我好你好吗\";\n    CHS *pchs = search_trie(trie, str);\n    delete_trie_word(trie, str8, 0);\n    delete_trie(trie);\n\n    print_trie(pchs);\n    free(pchs);\n\n    return 0;\n}\n\nint main() \n{\n    setlocale(LC_CTYPE, \"\");\n    test();\n    return 0;\n}\n```","slug":"C语言实现Trie字典树支持中文","published":1,"updated":"2017-03-20T03:08:23.350Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj0krusij000sk9o5moqtt4xu","content":"<p>C语言实现Trie字典树，支持中文，支持删除节点<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;wchar.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;locale.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;memory.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> DEFAULT_CHILD_SIZE 4</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_KEY_LENGTH 11</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_KEYS_LENGTH 100</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> Node &#123;</div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> ch;</div><div class=\"line\">    <span class=\"keyword\">_Bool</span> is_end;</div><div class=\"line\">    <span class=\"keyword\">struct</span> Node **child;</div><div class=\"line\">    <span class=\"keyword\">int</span> child_cur_length;</div><div class=\"line\">    <span class=\"keyword\">int</span> child_total_length;</div><div class=\"line\">&#125; Node;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> CHS &#123;</div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> chs[MAX_KEYS_LENGTH][MAX_KEY_LENGTH];</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">&#125; CHS;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">search_trie_child</span><span class=\"params\">(Node *node, <span class=\"keyword\">wchar_t</span> ch)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    Node *ptmp = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; node-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">        ptmp = node-&gt;child[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (ptmp-&gt;ch == ch) &#123;</div><div class=\"line\">            pnode = ptmp;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">init_node</span><span class=\"params\">(<span class=\"keyword\">wchar_t</span> ch)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Node *pnode = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</div><div class=\"line\">    pnode-&gt;ch = ch;</div><div class=\"line\">    pnode-&gt;is_end = <span class=\"number\">0</span>;</div><div class=\"line\">    pnode-&gt;child_cur_length = <span class=\"number\">0</span>;</div><div class=\"line\">    pnode-&gt;child_total_length = DEFAULT_CHILD_SIZE;</div><div class=\"line\">    pnode-&gt;child = (Node**)<span class=\"built_in\">malloc</span>(pnode-&gt;child_total_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">free_node</span><span class=\"params\">(Node *pnode)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"built_in\">free</span>(pnode-&gt;child);</div><div class=\"line\">    <span class=\"built_in\">free</span>(pnode);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">add_trie_child</span><span class=\"params\">(Node *node, <span class=\"keyword\">wchar_t</span> ch)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Node *pnode = init_node(ch);</div><div class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;child_cur_length &gt;= node-&gt;child_total_length) &#123;</div><div class=\"line\">        node-&gt;child_total_length = node-&gt;child_total_length * <span class=\"number\">2</span>;</div><div class=\"line\">        Node **tmp = (Node**)<span class=\"built_in\">malloc</span>(node-&gt;child_total_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">        <span class=\"built_in\">memcpy</span>(tmp, node-&gt;child, node-&gt;child_cur_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">        <span class=\"built_in\">free</span>(node-&gt;child);</div><div class=\"line\">        node-&gt;child = tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    node-&gt;child[node-&gt;child_cur_length++] = pnode;</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">_<span class=\"function\">Bool <span class=\"title\">delete_trie_word</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str, <span class=\"keyword\">int</span> cur)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Node *pnode;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (str[cur] == <span class=\"string\">'\\0'</span> &amp;&amp; trie-&gt;is_end) &#123;</div><div class=\"line\">        <span class=\"comment\">//匹配到了最后一个字符且是結束节点</span></div><div class=\"line\">        trie-&gt;is_end = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> ( str[cur] == <span class=\"string\">'\\0'</span> || ( pnode = search_trie_child(trie, str[cur]) ) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (delete_trie_word(pnode, str, cur + <span class=\"number\">1</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (pnode-&gt;child_cur_length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">int</span> i;</div><div class=\"line\">            <span class=\"comment\">//删除节点指针，并且把最后一个节点指针的位置调整到删除节点指针的位置</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; trie-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (pnode == trie-&gt;child[i]) &#123;</div><div class=\"line\">                    trie-&gt;child[i] = trie-&gt;child[trie-&gt;child_cur_length - <span class=\"number\">1</span>];</div><div class=\"line\">                    trie-&gt;child[trie-&gt;child_cur_length - <span class=\"number\">1</span>] = <span class=\"number\">0</span>;</div><div class=\"line\">                    trie-&gt;child_cur_length--;</div><div class=\"line\">                    free_node(pnode);</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (trie-&gt;child_cur_length == <span class=\"number\">0</span> &amp;&amp; !trie-&gt;is_end) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add_trie</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = (<span class=\"keyword\">int</span>)wcslen(str);</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= MAX_KEY_LENGTH) &#123;</div><div class=\"line\">        wprintf(<span class=\"string\">L\"too long str: %ls\\n\"</span>, str);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ( (pnode = search_trie_child(trie, str[i])) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">            pnode = add_trie_child(trie, str[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        trie = pnode;</div><div class=\"line\">    &#125;</div><div class=\"line\">    trie-&gt;is_end = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delete_trie</span><span class=\"params\">(Node *trie)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i;</div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; trie-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">        delete_trie(trie-&gt;child[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    free_node(trie);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">CHS* <span class=\"title\">search_trie</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = (<span class=\"keyword\">int</span>)wcslen(str);</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    Node *ptrie = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    CHS *pchs = (CHS *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(CHS));</div><div class=\"line\">    pchs-&gt;length = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"built_in\">memset</span>(pchs, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(CHS));</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">        ptrie = trie;</div><div class=\"line\">        <span class=\"keyword\">for</span> (j = i, k = <span class=\"number\">0</span>; j &lt; len; j++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> ( (pnode = search_trie_child(ptrie, str[j])) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                ptrie = pnode;</div><div class=\"line\">                pchs-&gt;chs[pchs-&gt;length][k++] = str[j];</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (pnode-&gt;is_end) &#123;</div><div class=\"line\">                pchs-&gt;chs[pchs-&gt;length][k] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">                pchs-&gt;length++;</div><div class=\"line\">                <span class=\"built_in\">memcpy</span>(&amp;pchs-&gt;chs[pchs-&gt;length], pchs-&gt;chs[pchs-&gt;length<span class=\"number\">-1</span>], MAX_KEY_LENGTH);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pchs;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_trie</span><span class=\"params\">(CHS *pchs)</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; pchs-&gt;length; i++) &#123;</div><div class=\"line\">        wprintf(<span class=\"string\">L\"%ls\\n\"</span>, &amp;pchs-&gt;chs[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">test</span><span class=\"params\">()</span></span></div><div class=\"line\">&#123;</div><div class=\"line\">    Node *trie = init_node(<span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str1 = <span class=\"string\">L\"1你好\"</span>;</div><div class=\"line\">    add_trie(trie, str1);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str2 = <span class=\"string\">L\"2你好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str2);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str3 = <span class=\"string\">L\"3你还好\"</span>;</div><div class=\"line\">    add_trie(trie, str3);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str4 = <span class=\"string\">L\"4你还好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str4);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str5 = <span class=\"string\">L\"5你真的还好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str5);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str6 = <span class=\"string\">L\"我好\"</span>;</div><div class=\"line\">    add_trie(trie, str6);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str7 = <span class=\"string\">L\"我好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str7);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str8 = <span class=\"string\">L\"我还好\"</span>;</div><div class=\"line\">    add_trie(trie, str8);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str = <span class=\"string\">L\"cc你好我好你好吗\"</span>;</div><div class=\"line\">    CHS *pchs = search_trie(trie, str);</div><div class=\"line\">    delete_trie_word(trie, str8, <span class=\"number\">0</span>);</div><div class=\"line\">    delete_trie(trie);</div><div class=\"line\"></div><div class=\"line\">    print_trie(pchs);</div><div class=\"line\">    <span class=\"built_in\">free</span>(pchs);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </span></div><div class=\"line\">&#123;</div><div class=\"line\">    setlocale(LC_CTYPE, <span class=\"string\">\"\"</span>);</div><div class=\"line\">    test();</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>C语言实现Trie字典树，支持中文，支持删除节点<br><figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div><div class=\"line\">140</div><div class=\"line\">141</div><div class=\"line\">142</div><div class=\"line\">143</div><div class=\"line\">144</div><div class=\"line\">145</div><div class=\"line\">146</div><div class=\"line\">147</div><div class=\"line\">148</div><div class=\"line\">149</div><div class=\"line\">150</div><div class=\"line\">151</div><div class=\"line\">152</div><div class=\"line\">153</div><div class=\"line\">154</div><div class=\"line\">155</div><div class=\"line\">156</div><div class=\"line\">157</div><div class=\"line\">158</div><div class=\"line\">159</div><div class=\"line\">160</div><div class=\"line\">161</div><div class=\"line\">162</div><div class=\"line\">163</div><div class=\"line\">164</div><div class=\"line\">165</div><div class=\"line\">166</div><div class=\"line\">167</div><div class=\"line\">168</div><div class=\"line\">169</div><div class=\"line\">170</div><div class=\"line\">171</div><div class=\"line\">172</div><div class=\"line\">173</div><div class=\"line\">174</div><div class=\"line\">175</div><div class=\"line\">176</div><div class=\"line\">177</div><div class=\"line\">178</div><div class=\"line\">179</div><div class=\"line\">180</div><div class=\"line\">181</div><div class=\"line\">182</div><div class=\"line\">183</div><div class=\"line\">184</div><div class=\"line\">185</div><div class=\"line\">186</div><div class=\"line\">187</div><div class=\"line\">188</div><div class=\"line\">189</div><div class=\"line\">190</div><div class=\"line\">191</div><div class=\"line\">192</div><div class=\"line\">193</div><div class=\"line\">194</div><div class=\"line\">195</div><div class=\"line\">196</div><div class=\"line\">197</div><div class=\"line\">198</div><div class=\"line\">199</div><div class=\"line\">200</div><div class=\"line\">201</div><div class=\"line\">202</div><div class=\"line\">203</div><div class=\"line\">204</div><div class=\"line\">205</div><div class=\"line\">206</div><div class=\"line\">207</div><div class=\"line\">208</div><div class=\"line\">209</div><div class=\"line\">210</div><div class=\"line\">211</div><div class=\"line\">212</div><div class=\"line\">213</div><div class=\"line\">214</div><div class=\"line\">215</div><div class=\"line\">216</div><div class=\"line\">217</div><div class=\"line\">218</div><div class=\"line\">219</div><div class=\"line\">220</div><div class=\"line\">221</div><div class=\"line\">222</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdio.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;wchar.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;locale.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;stdlib.h&gt;</span></span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span> <span class=\"meta-string\">&lt;memory.h&gt;</span></span></div><div class=\"line\"></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> DEFAULT_CHILD_SIZE 4</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_KEY_LENGTH 11</span></div><div class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">define</span> MAX_KEYS_LENGTH 100</span></div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> Node &#123;</div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> ch;</div><div class=\"line\">    <span class=\"keyword\">_Bool</span> is_end;</div><div class=\"line\">    <span class=\"keyword\">struct</span> Node **child;</div><div class=\"line\">    <span class=\"keyword\">int</span> child_cur_length;</div><div class=\"line\">    <span class=\"keyword\">int</span> child_total_length;</div><div class=\"line\">&#125; Node;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">typedef</span> <span class=\"keyword\">struct</span> CHS &#123;</div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> chs[MAX_KEYS_LENGTH][MAX_KEY_LENGTH];</div><div class=\"line\">    <span class=\"keyword\">int</span> length;</div><div class=\"line\">&#125; CHS;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">search_trie_child</span><span class=\"params\">(Node *node, <span class=\"keyword\">wchar_t</span> ch)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    Node *ptmp = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; node-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">        ptmp = node-&gt;child[i];</div><div class=\"line\">        <span class=\"keyword\">if</span> (ptmp-&gt;ch == ch) &#123;</div><div class=\"line\">            pnode = ptmp;</div><div class=\"line\">            <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">init_node</span><span class=\"params\">(<span class=\"keyword\">wchar_t</span> ch)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Node *pnode = (Node *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(Node));</div><div class=\"line\">    pnode-&gt;ch = ch;</div><div class=\"line\">    pnode-&gt;is_end = <span class=\"number\">0</span>;</div><div class=\"line\">    pnode-&gt;child_cur_length = <span class=\"number\">0</span>;</div><div class=\"line\">    pnode-&gt;child_total_length = DEFAULT_CHILD_SIZE;</div><div class=\"line\">    pnode-&gt;child = (Node**)<span class=\"built_in\">malloc</span>(pnode-&gt;child_total_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">free_node</span><span class=\"params\">(Node *pnode)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"built_in\">free</span>(pnode-&gt;child);</div><div class=\"line\">    <span class=\"built_in\">free</span>(pnode);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">Node* <span class=\"title\">add_trie_child</span><span class=\"params\">(Node *node, <span class=\"keyword\">wchar_t</span> ch)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Node *pnode = init_node(ch);</div><div class=\"line\">    <span class=\"keyword\">if</span> (node-&gt;child_cur_length &gt;= node-&gt;child_total_length) &#123;</div><div class=\"line\">        node-&gt;child_total_length = node-&gt;child_total_length * <span class=\"number\">2</span>;</div><div class=\"line\">        Node **tmp = (Node**)<span class=\"built_in\">malloc</span>(node-&gt;child_total_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">        <span class=\"built_in\">memcpy</span>(tmp, node-&gt;child, node-&gt;child_cur_length * <span class=\"keyword\">sizeof</span>(Node *));</div><div class=\"line\">        <span class=\"built_in\">free</span>(node-&gt;child);</div><div class=\"line\">        node-&gt;child = tmp;</div><div class=\"line\">    &#125;</div><div class=\"line\">    node-&gt;child[node-&gt;child_cur_length++] = pnode;</div><div class=\"line\">    <span class=\"keyword\">return</span> pnode;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">_<span class=\"function\">Bool <span class=\"title\">delete_trie_word</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str, <span class=\"keyword\">int</span> cur)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Node *pnode;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (str[cur] == <span class=\"string\">'\\0'</span> &amp;&amp; trie-&gt;is_end) &#123;</div><div class=\"line\">        <span class=\"comment\">//匹配到了最后一个字符且是結束节点</span></div><div class=\"line\">        trie-&gt;is_end = <span class=\"number\">0</span>;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> ( str[cur] == <span class=\"string\">'\\0'</span> || ( pnode = search_trie_child(trie, str[cur]) ) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> (delete_trie_word(pnode, str, cur + <span class=\"number\">1</span>)) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (pnode-&gt;child_cur_length == <span class=\"number\">0</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">int</span> i;</div><div class=\"line\">            <span class=\"comment\">//删除节点指针，并且把最后一个节点指针的位置调整到删除节点指针的位置</span></div><div class=\"line\">            <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; trie-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">                <span class=\"keyword\">if</span> (pnode == trie-&gt;child[i]) &#123;</div><div class=\"line\">                    trie-&gt;child[i] = trie-&gt;child[trie-&gt;child_cur_length - <span class=\"number\">1</span>];</div><div class=\"line\">                    trie-&gt;child[trie-&gt;child_cur_length - <span class=\"number\">1</span>] = <span class=\"number\">0</span>;</div><div class=\"line\">                    trie-&gt;child_cur_length--;</div><div class=\"line\">                    free_node(pnode);</div><div class=\"line\">                    <span class=\"keyword\">break</span>;</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (trie-&gt;child_cur_length == <span class=\"number\">0</span> &amp;&amp; !trie-&gt;is_end) &#123;</div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">add_trie</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = (<span class=\"keyword\">int</span>)wcslen(str);</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    <span class=\"keyword\">if</span> (len &gt;= MAX_KEY_LENGTH) &#123;</div><div class=\"line\">        wprintf(<span class=\"string\">L\"too long str: %ls\\n\"</span>, str);</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> ( (pnode = search_trie_child(trie, str[i])) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">            pnode = add_trie_child(trie, str[i]);</div><div class=\"line\">        &#125;</div><div class=\"line\">        trie = pnode;</div><div class=\"line\">    &#125;</div><div class=\"line\">    trie-&gt;is_end = <span class=\"number\">1</span>;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">delete_trie</span><span class=\"params\">(Node *trie)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i;</div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; trie-&gt;child_cur_length; i++) &#123;</div><div class=\"line\">        delete_trie(trie-&gt;child[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">    free_node(trie);</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\">CHS* <span class=\"title\">search_trie</span><span class=\"params\">(Node *trie, <span class=\"keyword\">wchar_t</span> *str)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> len = (<span class=\"keyword\">int</span>)wcslen(str);</div><div class=\"line\">    <span class=\"keyword\">int</span> i = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> j = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</div><div class=\"line\">    Node *pnode = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    Node *ptrie = <span class=\"literal\">NULL</span>;</div><div class=\"line\">    CHS *pchs = (CHS *)<span class=\"built_in\">malloc</span>(<span class=\"keyword\">sizeof</span>(CHS));</div><div class=\"line\">    pchs-&gt;length = <span class=\"number\">0</span>;</div><div class=\"line\">    <span class=\"built_in\">memset</span>(pchs, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(CHS));</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; len; i++) &#123;</div><div class=\"line\">        ptrie = trie;</div><div class=\"line\">        <span class=\"keyword\">for</span> (j = i, k = <span class=\"number\">0</span>; j &lt; len; j++) &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span> ( (pnode = search_trie_child(ptrie, str[j])) == <span class=\"literal\">NULL</span> ) &#123;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">                ptrie = pnode;</div><div class=\"line\">                pchs-&gt;chs[pchs-&gt;length][k++] = str[j];</div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">if</span> (pnode-&gt;is_end) &#123;</div><div class=\"line\">                pchs-&gt;chs[pchs-&gt;length][k] = <span class=\"string\">'\\0'</span>;</div><div class=\"line\">                pchs-&gt;length++;</div><div class=\"line\">                <span class=\"built_in\">memcpy</span>(&amp;pchs-&gt;chs[pchs-&gt;length], pchs-&gt;chs[pchs-&gt;length<span class=\"number\">-1</span>], MAX_KEY_LENGTH);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> pchs;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">print_trie</span><span class=\"params\">(CHS *pchs)</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">int</span> i;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt; pchs-&gt;length; i++) &#123;</div><div class=\"line\">        wprintf(<span class=\"string\">L\"%ls\\n\"</span>, &amp;pchs-&gt;chs[i]);</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">test</span><span class=\"params\">()</span></div><div class=\"line\"></span>&#123;</div><div class=\"line\">    Node *trie = init_node(<span class=\"number\">0</span>);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str1 = <span class=\"string\">L\"1你好\"</span>;</div><div class=\"line\">    add_trie(trie, str1);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str2 = <span class=\"string\">L\"2你好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str2);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str3 = <span class=\"string\">L\"3你还好\"</span>;</div><div class=\"line\">    add_trie(trie, str3);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str4 = <span class=\"string\">L\"4你还好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str4);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str5 = <span class=\"string\">L\"5你真的还好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str5);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str6 = <span class=\"string\">L\"我好\"</span>;</div><div class=\"line\">    add_trie(trie, str6);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str7 = <span class=\"string\">L\"我好吗\"</span>;</div><div class=\"line\">    add_trie(trie, str7);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str8 = <span class=\"string\">L\"我还好\"</span>;</div><div class=\"line\">    add_trie(trie, str8);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">wchar_t</span> *str = <span class=\"string\">L\"cc你好我好你好吗\"</span>;</div><div class=\"line\">    CHS *pchs = search_trie(trie, str);</div><div class=\"line\">    delete_trie_word(trie, str8, <span class=\"number\">0</span>);</div><div class=\"line\">    delete_trie(trie);</div><div class=\"line\"></div><div class=\"line\">    print_trie(pchs);</div><div class=\"line\">    <span class=\"built_in\">free</span>(pchs);</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">()</span> </div><div class=\"line\"></span>&#123;</div><div class=\"line\">    setlocale(LC_CTYPE, <span class=\"string\">\"\"</span>);</div><div class=\"line\">    test();</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cj0krusby0000k9o5wokeax5t","tag_id":"cj0krusc50001k9o5tw2d8rsx","_id":"cj0krusc80003k9o53a7wo0so"},{"post_id":"cj0krusby0000k9o5wokeax5t","tag_id":"cj0krusc70002k9o5jzob3557","_id":"cj0krusc80004k9o5ugtr7rd5"},{"post_id":"cj0krusca0005k9o5ir77cdif","tag_id":"cj0krusc50001k9o5tw2d8rsx","_id":"cj0krusci000ak9o5lfraro4b"},{"post_id":"cj0krusca0005k9o5ir77cdif","tag_id":"cj0kruscd0007k9o5azfd494b","_id":"cj0krusci000bk9o5134pe2j2"},{"post_id":"cj0kruscb0006k9o5yercmtgo","tag_id":"cj0krusch0009k9o5do9ic5kv","_id":"cj0krusci000dk9o5a1zy0yps"},{"post_id":"cj0kruscb0006k9o5yercmtgo","tag_id":"cj0krusc70002k9o5jzob3557","_id":"cj0kruscj000ek9o5wldcqkmj"},{"post_id":"cj0kruscb0006k9o5yercmtgo","tag_id":"cj0krusci000ck9o5ttyr3snn","_id":"cj0kruscj000fk9o5piogpr1r"},{"post_id":"cj0kruse1000gk9o52xdq0j0d","tag_id":"cj0krusea000jk9o5aqeapy07","_id":"cj0krused000mk9o5ugel0k5q"},{"post_id":"cj0kruse4000ik9o5mwfqu2jk","tag_id":"cj0krusec000lk9o5pwkx4q73","_id":"cj0krusef000pk9o550rpxyof"},{"post_id":"cj0kruse4000ik9o5mwfqu2jk","tag_id":"cj0krused000nk9o5kqeapf8u","_id":"cj0krusef000qk9o5wp8lwvbg"},{"post_id":"cj0kruseb000kk9o5t4n5rtc1","tag_id":"cj0krusea000jk9o5aqeapy07","_id":"cj0krusef000rk9o5d3ra54sa"},{"post_id":"cj0krusij000sk9o5moqtt4xu","tag_id":"cj0krusil000tk9o5vhbs49ve","_id":"cj0krusin000vk9o58eo3vqt4"},{"post_id":"cj0krusij000sk9o5moqtt4xu","tag_id":"cj0krusim000uk9o5n53ducj3","_id":"cj0krusin000wk9o5qo51o87x"}],"Tag":[{"name":"PHP","_id":"cj0krusc50001k9o5tw2d8rsx"},{"name":"爬虫","_id":"cj0krusc70002k9o5jzob3557"},{"name":"HTTP","_id":"cj0kruscd0007k9o5azfd494b"},{"name":"Python","_id":"cj0krusch0009k9o5do9ic5kv"},{"name":"代理IP","_id":"cj0krusci000ck9o5ttyr3snn"},{"name":"hexo","_id":"cj0krusea000jk9o5aqeapy07"},{"name":"转载","_id":"cj0krusec000lk9o5pwkx4q73"},{"name":"教程","_id":"cj0krused000nk9o5kqeapf8u"},{"name":"C语言","_id":"cj0krusil000tk9o5vhbs49ve"},{"name":"算法","_id":"cj0krusim000uk9o5n53ducj3"}]}}